■0x00.) はじめに
  ポートスキャンには様々な種類があり、各ポートにコネクションを張るものからステル
スポートスキャナーに代表される "TCP SYN Stealth Port Scan"のようなTCP/IPの特性を
利用したものまで色々とあります。しかし、それらは必ず自分のIPアドレスをさらし、な
おかつ、スキャンしたポートがターゲットに知られてしまいます。
  たとえ、おとりパケットを使ったとしても、それは単に"分かりづらく" するだけでそ
の中に自らのパケットを混じらせなくてはならないため、身元を隠すには不完全です。
  しかし、もしターゲットに全く自分の存在を知らせる事なく、ポートスキャンを実行で
きるとしたらどうでしょう。

■0x01.) IPID
  IPヘッダーにはそれぞれにID(Identification)番号が振られますが、通常、同一のID
を持ったパケットの送信が行われる事はありません。
  ID番号はTCP/IPソフトウェアが起動されると16ビット数値の0001から始まる値です。
もっとも、これは実装によって違います。例えば、LinuxからPingを打つとIDをゼロにし
て送信しますが、これに対してNetBSDは IDをインクリメントしながら送信します。
  しかし、TelnetやFTPのセッション中にゼロのIDや同一のIDでやり取りをする事はあり
ません。IDが同一になるのはパケットをフラグメンテーション（分割）した場合です。フ
ラグメンテーションが発生すると、受信する側はID番号を元にパケットを再構築します。
  この辺りはTCP/IPの基本ですが、このIPIDを利用すると、なかなか面白い感じでポー
トスキャンを行う事が出来ます。

IPヘッダーのレイアウト
    0                   1                   2                   3   
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |Version|  IHL  |Type of Service|          Total Length         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |         Identification(IPID)  |Flags|      Fragment Offset    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  Time to Live |    Protocol   |         Header Checksum       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                       Source Address                          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                    Destination Address                        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                    Options                    |    Padding    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

■0x02.) テクニック
  このスキャンテクニックには、3つのマシンが必要です。ひとつはスキャンを行う攻撃
者のマシン、ふたつめがスキャンを受けるターゲット、そして、最後におとりに使われる
ゾンビマシンです。
  まず、攻撃者はゾンビへACK+SYNのパケットを送信して、RST（リセット）パケットを
受信し、IPIDを取得します。
  次に、攻撃者はターゲットへゾンビのIPアドレスで偽装したSYN（接続要求）パケット
をターゲットのスキャンしたいポートへ送信します。ターゲットはポートが開いているな
らば ACK+SYNを、閉じているならばRSTをゾンビへ返送します。
  最後に攻撃者は再びゾンビへACK+SYNを送信してRSTパケットを受信し、IPIDからター
ゲットのポートが開いているのか、閉じているのかを判断します。ターゲットからは、全
てのパケットがゾンビから送信されてきたようにしか見えません。
  なぜ、これだけでポートが開いているかどうかが判断出来るのか、それは次のような仕
組みです。

         ACK+SYNをゾンビへ送信
［攻撃者］------------------------------------------------------>［ゾンビ］
                               ゾンビはRSTを攻撃者へ返送(IPID: 30)
［攻撃者］<------------------------------------------------------［ゾンビ］

+++++++++++++++++++++++++++ ポートが開いている場合 +++++++++++++++++++++++++++

         ゾンビを装いSYNを送信
［攻撃者］------------------------------------------------------>［ターゲット］
                               ポートが開いているのでACK+SYNを返送
［ゾンビ］<------------------------------------------------------［ターゲット］
         ゾンビはターゲットへRSTを返送(IPID: 31)
［ゾンビ］------------------------------------------------------>［ターゲット］


         攻撃者は再びゾンビへACK+SYNを送信
［攻撃者］------------------------------------------------------>［ゾンビ］
                               ゾンビはRSTを攻撃者へ返送(IPID: 32)
［攻撃者］<------------------------------------------------------［ゾンビ］

+++++++++++++++++++++++++++ ポートが閉じている場合 +++++++++++++++++++++++++++

         ゾンビを装いSYNを送信
［攻撃者］------------------------------------------------------>［ターゲット］
                                  ポートが閉じているのでRSTを返送
［ゾンビ］<------------------------------------------------------［ターゲット］


         攻撃者は再びゾンビへACK+SYNを送信
［攻撃者］------------------------------------------------------>［ゾンビ］
                               ゾンビはRSTを攻撃者へ返送(IPID: 31)
［攻撃者］<------------------------------------------------------［ゾンビ］


このように、ポートが閉じている場合はRSTを受け取ったゾンビが反応をしないため
ゾンビのIPIDはポートが開いている場合に比べて、ひとつID番号が少なくなります。
つまり、最初に受信したゾンビからのIPIDと再びゾンビから受信したIPIDの差をみ
ればターゲットのポートの状態を知る事が出来る訳です。

■0x03.) 実践
  IPIDを利用する事で、ポートスキャンを実行できる、という事は分かりました。
  次に、このテクニックを使って、実際にポートスキャナーを作成、動作させてみまし
た。コードを簡潔にするために、Linux専用になっています。
  このサンプルコードは他のステルスポートスキャナーと同じく、ルート権限を必要と
します。これは、IPヘッダーの作成等を自分で行わなければならないからです。
  このスキャンはゾンビが非常に多くのパケットをやり取りをしていると正確にポート
の状態を判断するのが困難になります。

[root@maniac ipidscan]# ./ipidscan www.securityfocus.com -z www.shellcode.com.ar -p 544
phase 1 - Checking RST IPID... 32508 32509 32510 32511 32512 (Sequential)
phase 2 - Send SYN|ACK to www.shellcode.com.ar... Success(IPID = 32513)
phase 3 - Send SYN from www.shellcode.com.ar to www.securityfocus.com, target port 544... Success
phase 4 - Send SYN|ACK to www.shellcode.com.ar... Success(IPID = 32514)
phase 5 - Checking IPID... Success

www.securityfocus.com port 544 must be Close.
[root@maniac ipidscan]#
[root@maniac ipidscan]# ./ipidscan www.securityfocus.com -z www.shellcode.com.ar -p 443
phase 1 - Checking RST IPID... 32647 32648 32649 32650 32651 (Sequential)
phase 2 - Send SYN|ACK to www.shellcode.com.ar... Success(IPID = 32652)
phase 3 - Send SYN from www.shellcode.com.ar to www.securityfocus.com, target port 443... Success
phase 4 - Send SYN|ACK to www.shellcode.com.ar... Success(IPID = 32654)
phase 5 - Checking IPID... Success

www.securityfocus.com port 443 must be Open.
[root@maniac ipidscan]#

使用したテストコードは http://idzero.s35.xrea.com/samples/ipidscan.tgz からDLで
きます。

■0x04.) ゾンビの選び方
  さて、ここで「今日からおれも匿名でポートスキャンできるぜー！」と考えているアナ
タ。ちょい待った。
  ゾンビを選ぶには一定の基準があります。まず第１にゾンビのトラフィック状況。先に
も述べた通りゾンビが非常に多くのパケットをやり取りをしていると正確にポートの状態
を判断するのが困難になります。他のパケットが紛れ込むとID番号にズレが生じるからで
す。この為、ゾンビへ２つのパケットを送信する最中に邪魔が入ってはいけません。
  第２にゾンビによるIPIDの設定方法です。私の知る限り、現在のLinuxシステムをゾン
ビに仕立上げる事は出来ません。これは、LinuxがIPIDにゼロを設定してRSTを返送する
からです。少なくても、私の手元にあるFreeBSD/NetBSD/NT5はIPIDをシーケンシャル
に設定する為、条件が良ければゾンビに仕立上げる事が出来るでしょう。ランダムにIPID
を設定するものとしてはOpenBSD, Solarisが上げられます。
  そして、もうひとつ。偽造パケットの発行が可能か、ということです。偽造パケットが
破棄された場合は、もちろんターゲットへ届く事がないので、この手法はとれなくなり
ます。

■0x05.) Nmapでの実装
  ところで、このポートスキャン手法はNmapにも取り入れられていて、"idle_scan.c"と
いうＣソースファイルで実装されています。
  このファイル名から分かりますが、このスキャンタイプはアイドルスキャンと呼ばれる
もので、ゾンビがIdle（アイドル）状態だとスキャンの正確性が向上すのでこう呼ばれて
いるそうです(サンクス IPUSIRONサン) 。
  Nmapで実行する場合、"-sI"オプションを使用します。ゾンビへ投げるパケットの宛先
ポート番号を指定したい場合は "-sI ホスト:ポート" のように":"を付けてポート番号
を指定してやります。
  実際にNmapを使用してスキャンを実行してみましょう。

# nmap -sI mikage aoi -p- -P0

Starting nmap 3.27 ( www.insecure.org/nmap/ ) at 2003-07-25 22:53 JST
Idlescan using zombie mikage (192.168.11.4:80); Class: Incremental
Interesting ports on aoi (192.168.11.5):
(The 65531 ports scanned but not shown below are in state: closed)
Port       State       Service
135/tcp    open        loc-srv
139/tcp    open        netbios-ssn
445/tcp    open        microsoft-ds
1025/tcp   open        NFS-or-IIS

Nmap run completed -- 1 IP address (1 host up) scanned in 1158.168 seconds

  -P0 でターゲットへのPingを抑制します。Pingを飛ばしたらターゲットに補足されます
からね。そして、-p- オプションで全てのポート番号をスキャンしています。Nmapはデフ
ォルトではウェルノウン・ポートと Services ファイルに記述されているポートをスキャ
ンしますが、このオプションを付けると全ポートにスキャンをかける為、数十倍の時間が
かかります。通常はこのオプションは使わなくても良いでしょう。
  ウェルノウン・ポートはIANAによって割り当て・管理されていて、最新のポートリスト
は http://www.iana.org/assignments/port-numbers から入手できます。
  このスキャンの有用性は、単に匿名性を上げるだけではなく、信頼性の有無を調べる事
の出来る点です。例えば、攻撃者のマシンからはフィルタリングされているポートがゾン
ビからは開いているように見えるならば、パケットフィルターのルールはゾンビからのパ
ケットを許している、という事になります。つまり、信頼関係のあるホストをこの手法に
より洗い出す事が出来ます。これは例えば攻撃者が真の標的への踏み台を探すのに有効で
しょう。
