x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

--- 第○章: 基礎暗号学講座 〜 第9回 〜 ---

著者：IPUSIRON

x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x


■0x01.) はじめに

　共通鍵暗号スキームでは、送信者と受信者が同じ秘密鍵を共有している必要が
ありました。鍵を前もって相手に渡しておけばよいわけですが、これには当然限
界があります。インターネットのように遠隔地にいる人に安全に渡すのは困難で
すし、鍵を変更するときにも不便です。また鍵を事前に共有できたとしても、暗
号文の通信相手が多くなるにつれて、管理しなければならない鍵の数が膨大にな
ってしまいます。

　この鍵配送問題を解決するための方法には、鍵センターを利用する方法、公開
鍵暗号スキームを利用する方法があります。
　WB32では公開鍵暗号スキームを解説したので、復習ついでに、公開鍵暗号スキ
ームを使った鍵配送について解説しておきます。公開鍵暗号スキームでは、暗号
文を作るときに自分の秘密鍵や公開鍵を一切使いません。送信先（受信者）の公
開鍵を用いて、平文を暗号化して、送信します。暗号文を受け取った受信者は自
分の秘密鍵で復号します。これが公開鍵暗号スキームでした。これを鍵配送に利
用するには、共通鍵を平文としてみてそれを暗号化して送ればよいことになりま
す。

　今回の記事の話題は、DH鍵配送方式という方法です。DH鍵配送方式を使うと、
共通鍵を暗号化して送るといった予備通信をせずに、いつ盗聴されているかわか
らないような安全でないネットワーク（例えば、インターネットやLAN内）であっ
ても共通鍵を共有することができてしまいます。


■0x02.) DH鍵配送方式

　DH鍵配送方式の「DH」とは、Diffie（ディフィー）とHellman（ヘルマン）の頭
文字です。それではDH鍵配送方式の定義を次に示します。原始元やZp^*のような
表記、合同式などの概念を使います。まだきちんと理解していない人はWB32を参
考にしてください。

[1]ネットワーク公開情報

　ネットワーク全体で共通に使用する情報として、ランダムに生成された大きな
素数pとZp^*の原始元gが公開されていると仮定します。

[2]鍵生成アルゴリズム

　Aliceは0≦a≦p-2となるaをランダムに選び、次のようにy_Aを計算します。

y_A=g^a (mod p)

　次に、y_Aを公開鍵として公開し、aを秘密鍵として秘密に保持します。

　また、Bobは0≦b≦p-2となるaをランダムに選び、次のようにy_Bを計算します。

y_B=g^b (mod p)

　次に、y_Bを公開鍵として公開し、bを秘密鍵として秘密に保持します。

[3]鍵共有アルゴリズム

　Aliceは、自分の秘密鍵aとボブの公開鍵y_Bを入力として、次のようにK_Aを計
算します。

K_A=(y_B)^a (mod p)

　これがAliceの鍵となります。

　また、Bobは、自分の秘密鍵bとAliceの公開鍵y_Aを入力として、次のようにK_B
を計算します。

K_B=(y_A)^b (mod p)

　これがBobの鍵となります。

　以上のアルゴリズムの動きを画像にすると次のようになります（図1参照）。

（図1）http://s-akademeia.sakura.ne.jp/main/image9/K.jpg


■0x03.) DH鍵共有方式は本当に安全か？

　まず確認すべきことは、鍵共有方式とは最終的に同じ鍵を共有できているとい
うことなので、AliceとBobの両者が最終的に得た値K_AとK_Bは一致していること
を確認しなければなりません。ここでK=g^ab mod pとおくと、K=K_A=K_Bとなりま
す。このKがAliceとBobの2者間で共有できた鍵です。

　次に確認すべきことは、通信路を盗聴しているアドバーサリーが共有鍵である
Kを計算できないということです。Kを計算しようとする素直な方法は、y_A,y_Bか
らa,bを特定して、g^ab mod pを計算するという方法です。gは公開情報ですが、
a,bは一様ランダムなので、g^aやg^bも一様に分布することになります。こういう
状況において、アドバーサリーはg^aやg^bからa,bを取り出すのは離散対数問題（
詳細はWB32）からできません。
　Kを計算するもうひとつの方法は、DH鍵配送における公開情報であるp,g,y_A（
＝g^a mod p）,y_B（＝g^b mod p）から、K=g^ab mod pを求めようとするアプロ
ーチです。この問題をDH問題といいます（図2参照）。アドバーサリーがDH問題を
解くことができないことを示せなければ、DH鍵共有は安全でないということにな
ります。

（図2）http://s-akademeia.sakura.ne.jp/main/image9/dh.jpg


■0x04.) DH問題 vs 離散対数問題

　公開情報から直接g^ab mod pを計算しなくても、a,bを計算してからg^ab mod p
を計算できてしまえば、DH問題を解くことができます。つまり、0x03で呼べたこ
との前者（離散対数問題）は、後者に含まれてしまっているわけです。よって、
離散対数問題が解けてしまえば、DH問題も解けてしまいます。しかし、その逆、
即ちDH問題が解ければ、離散対数問題も解けるかどうかはまだわかっていません。
DH問題は、離散対数問題よりもやさしい問題である可能性があるわけです。ただ
し、暗号に使われているほとんどの群においては、離散対数問題とDH問題は計算
量理論の意味のおいて、等価だと信じられています。それと同時に、pが十分大き
いときに、DH問題を解く効率的（多項式時間で解けること）なアルゴリズムは見
つかっていません。将来的にもそのようなアルゴリズムは作れないだろうという
仮定をDH仮定といいます。DH仮定は、離散対数仮定よりも要求することが大きい
ので、より強い仮定となります。

　以上のことをまとめれば、次のようになります。

・離散対数問題が解ける⇒DH鍵共有方式は安全でない
・DH問題が解ける⇒DH鍵共有方式は安全でない
・離散対数問題が解ける⇒DH問題が解ける
・DH問題が解ける⇒離散対数問題が解けるとは限らない
・DH問題が解けない⇒DH鍵共有方式は安全


■0x05.) DH問題とElGamal暗号の関係

　ElGamal暗号はWB32で紹介した公開鍵暗号スキームの一種です。このElGamal暗
号の解読が離散対数問題と同程度に困難かどうかはわかっていません。すなわち、
アドバーサリーは離散対数である秘密鍵xを求める以外の方法で解読する可能性は
あります。しかしながら、ElGamal暗号の安全性はDH問題の困難さと等価であるこ
とがわかっています。これを定理として書くと次のようになります。

[定理]
「ElGamal暗号において、公開鍵pk=(p,g,y)および暗号文c=(c1,c2)から平文mを求
める効率的なアルゴリズムAが存在する」
⇔「DH問題を解く効率的なアルゴリズムBが存在する」

　証明には帰着法を用います。この証明アプローチでは暗号における証明可能安
全性の世界ではよく登場します。今回の証明を通じて帰着方のやり方をマスター
してもらえたらと思います。理解するには、図を自分で実際に描いてみるのが効
果的です。アルゴリズムは入力と出力のセットになっているので、それを明確に
しておくことがポイントです。

[1]（⇒を示す）

　ElGamal暗号を解読する任意のアルゴリズムAを利用して、DH問題を解くアルゴ
リズムBを作ります。Aを内部で利用して、Bの入力と出力に合うように、内部で計
算できればよいことになります。次の図のようにアルゴリズムBを構成すれば、D
H問題が解けたことになります（図3参照）。

（図3）http://s-akademeia.sakura.ne.jp/main/image9/dh_elgamal1.jpg

　アルゴリズムは構成されましたが、確認すべきことはいくつかあります。
　まず、Aの入力が正しいかどうかという点です（①）。Aから見てc=(c1,c2)=(
g^r,R)はElGamalの暗号文となっているとします。ElGamal暗号の復号アルゴリズ
ムでは次のような計算を復号します。

m=c2×c1^{p-1-x} mod p

　c1=g^r、c2=Rを代入すると、R=mg^{xr}が成り立ちます。つまり、AはR=mg^{xr}
を満たすような平文mは出力するということになります。

　次に、Bの出力がDH問題を解いた結果であることを確認します（②）。BはR/mを
計算すれば、g^xrとなり、これを出力します。すると、ちょうど入力(p,g,g^x,
g^r)に対して、きちんとDH問題を解いた結果であるg^xrを出力できています。

[2]（←を示す）

　今度は逆を示すので、帰着法も逆に考えます。DH問題を解く任意のアルゴリズ
ムBを利用して、ElGamal暗号を解読するAを作ります。Bを内部で利用して、Aの入
力と出力に合うように、内部で計算できればよいことになります。次の図のよう
にアルゴリズムAを構成すれば、ElGamal暗号が解けたことになります（図4参照）。

（図4）http://s-akademeia.sakura.ne.jp/main/image9/dh_elgamal2.jpg

　アルゴリズムは構成されましたが、確認すべきことはいくつかあります。
　まず、Aの入力が正しいかどうかという点です（①）。これはAの入力をそのま
まBの入力にしてしまえばよいことになります。

　次に、Aの出力がElGamal暗号を解いた結果であることを確認します（②）。Bは
g^xrを出力するので、Aは{my^r}/g^(xr)を計算します。すると、次のように展開
できます。

{my^r}/g^(xr)=m(g^x)^r/g^(xr)={mg^(xr)}/g^(xr)=m

　すると結局mが計算できるので、Bはこれを出力すれば、うまくElGamal暗号を解
いたことになります。


■0x06.) おわりに

　今回はあまり数学的な記述がなかったので、読みやすかったのではないでしょ
うか。証明可能安全性の世界では、「ある仮定が真ならば、この暗号は安全であ
る」というような議論をします。その議論の証明において、帰着法や背理法など
が利用されます。背理法は数学をやったことがある人なら既知だと思います。一
方、帰着法は私自身暗号を学んで初めて触れたものなので、今回初めて聞いた人
も多いことでしょう。ポイントを理解すれば（証明をなぞることは）難しいもの
ではないので、しっかり理解しておきましょう。
　今回で10回となりましたが、全体として大体20回を考えていますので、ちょう
ど半分を終えたことになります。次回は待ちに待ったRSA暗号の解説なのでお楽し
みに。

　それではまた来月に会いましょう。


