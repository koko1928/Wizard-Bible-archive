x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

--- 第5章: Linuxアクセスコントロールクイックリフェレンス ---

著者：Taka John Brunkhorst

x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x


■0x01.) はじめに

　今回はLinuxアクセスコントロールについて書いてみました。
　始めはチュートリアルとして書き始めましたがどうも書きたいことが決まっているのに言葉が出てこないようなのでクイックリフェレンスということにしてみました。
　なお、+6777などUNIXと違うとこがあったような記憶がするのでUNIXは含めませんでしたが、ほとんどの場合は共通するはずです。


■0x02.) UNIXライクパーミッション　＜シンボル＞

　Linuxアクセスコントロール（UNIXライクパーミッション）は4通りの表示方法
があります。

　まずひとつはシンボルです。このシンボルでのパーミッション表示は非常にわ
かりやすい仕組みになっています。例えば、「s-trwxrw-r--」なら、「s-t」（S
pecial bits）、「rwx」（User）、「rw-」（Group）、「r--」（Other）と分け
ることができます。つまり、シンボルは4つのセクションに分かれているのです。


■0x03.) スペシャルモード

　スペシャルモード（Special bitsの部分）はファイル、ディレクトリに対して
特別な操作を必要とする場合に使用します。左から順に、SUID、SGID、Stickyシ
ンボルとなっています。

・SUID（Set User ID）
　SUIDはファイルのオーナーの権限でプログラムを実行する場合に使われます。
例えばプログラムのオーナーがrootで実行者がfooであるとします。通常ですとf
ooの権限で実行されますがSUIDがセットされているとrootの権限で実行できます。
SUIDを使用するとオーナーのパスワードを渡さずにオーナーの権限で実行できる
のでlprとなどで使用されています。
　シンボルは「s」です。

・SGID（Set Group ID）
　SGIDはSUIDと似ています。SGIDがセットされているファイルに対してはそのフ
ァイルのグループ権限で実行できます。またSGIDはディレクトリにも使用できま
す。この場合そのディレクトリ下に作成されたファイルすべてにそのディレクト
リのグループ権限が与えられます。例えば/var/user/fooのディレクトリがSGID 
moinとしtouch /var/user/foo/omgした場合omgはmoinのグループに所属します。
　シンボルは「s」です。

・Sticky
　Stickyは元々プログラムの起動を短縮するために実行可能プログラムに適用さ
れプログラム終了後、プログラムのイメージをメモリーに保存するために使用さ
れていました。現在これはバーチャルメモリーの発展により不必要になりました。
Stickyが有効されたファイル、ディレクトリは編集のみ許可され、改名削除はフ
ァイルオーナー、ディレクトリオーナー又はroot以外できません。
　シンボルは「t」です。


■0x04.) 使用方法

　SUID,SGID,Stickyは普段User,Group,OtherのExecutable（x）の位置に置かれま
す。
　例えばその他のユーザー（other[o]）にSticky（T）を適用する場合は「$ chm
od o+T file1」と入力し、シンボルで「rwxrw-rwt」という風になります。

　他にもいくつか例を示してみます。

○GroupにSGID
　dir1に作成されたファイルは誰が作成しようが関係なくgrpに所属する。

-----
$ chmod g+s dir1
$ ls -l dir1
drwxrwsr--  0 usr grp 0 dir1
-----

○OtherにSUID
　exec1がusrの権限で実行される。

-----
$ whoami
usr2
$ chmod o+s exec1
$ ls -l exec1
rwxrwxr-s  0 usr grp 0 exec1
-----

○GroupにSticky

　grpに所属しているユーザーはfile1を編集できるが削除や改名はできない。

-----
$ chmod g+t file1
$ ls -l file1
rwxrwTr--  0 usr grp 0 file1
-----


■0x05.) User,Group,Other

・User：ファイルの所有者、作成者
・Group：ファイルを所有しているグループ
・Other：その他のユーザー


+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| パーミッション | シンボル  |  ファイルへの権限   | ディレクトリへの権限
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Read        |    r      |  ファイルを読む権限 | ディレクトリの内容を表示
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Write       |    w      |  ファイルを編集     | ファイルを作成削除
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Exucute      |    x      |  ファイルを実行     | ファイルの読み書き
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


■0x06.) バイナリ

　Special,User,Group,Otherパーミッションはバイナリで表示することができま
す。
　「001」「111」「110」「100」というバイナリの場合、Special,User,Group,O
therとなります。1が有効というわけですから、シンボルでは「s-T rwx rw- r--」
となり、「rwx rw- r-T」となります。


■0x07.) Octal（8進数）

　例えばバイナリが「111」の場合、先頭から「4」「2」「1」となります。

　「000 111 101 100」のバイナリの場合、

・000 = 0+0+0 = 0
・111 = 4+2+1 = 7
・101 = 4+0+1 = 5
・100 = 4+0+0 = 4

　つまりOctalで「0754」になります。0は略して、「754」と表記できます。


■0x08.) バイナリ,シンボル,Octal変換例

-----------
Symbol: --- rwx rwx rwx
binary: 000 111 111 111
Octal: 0(0+0+0=) 7(4+2+1) 7(4+2+1) 7(4+2+1) = 0777 = 777
-----------
Symbol: rwx rws rwT
binary: 011 111 111 111
Octal: 3(2+1) 7(4+2+1) 7(4+2+1) 7(4+2+1)= 3777
-----------
Symbol: rws r-s r-x
binary: 110 111 101 101
Octal: 6(4+2) 7(4+2+1) 5(4+1) 5(4+1) = 6755


■0x09.) Umask

　umaskはシステムのデフォルトパーミッション設定を表示、変更するときに使い
ます。

　現在のumask設定を表示するにはumaskコマンドを使います。

-----
$ umask
0022
-----

　この場合、新しく作成されたすべてのファイルのパーミッションは644（＝666
-22）、ディレクトリのパーミッションは755（＝777-22）になります。

　もうひとつ例を出しておきます。例えば、umaskが0027のときは、

○ファイルの場合
・640（＝666-27）　マイナスは0とする。
・シンボル：rw- r-- ---

○ディレクトリの場合
・パーミッション：750（＝777-27）
・シンボル：rwx r-x ---


■0x02.) あとがき

　どうでしたか？
　クイックリフェレンスどころかただの表になってしまったような気がします。
ところどころ抜けてるところもあるでしょうが許してください。次回はもしかし
たらmanページの書き方、もしかしたらgdb（GNU DeBugger）を使ったBoF、または
レギュラーエクスプレションチュートリアルを書くかもしれません。	

