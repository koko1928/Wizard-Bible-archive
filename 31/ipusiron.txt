x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

--- 第○章: 基礎暗号学講座　〜 第7回 〜 ---

著者：IPUSIRON

x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x


■0x01.) はじめに

　前回は共通鍵暗号と共に使われるMAC（Message Authentication Code）という
暗号技術について解説しました。このMACを使うことで、メッセージの正当性を保
障することができます。
　今回は公開鍵暗号を理解するうえで必要な数学について解説します。といって
も定義の連続ばかりでは萎えると思いますので、直観的な意味の定義を示します。
その後で、実際に暗号を実装する上で役に立つ（かもしれない）考え方について
解説します。


■0x02.) 群・環・体の直観的定義

　大学の数学科では、群・環・体という概念について半年〜1年を通じて学ぶと思
います。これらの概念は非常に重要で、化学・物理学・情報学などを理解する上
でも便利なものです。ところが定義に登場する条件が多く、慣れるまで混乱する
でしょう。そこで今回は直観的な意味だけを解説します。

　ここで覚えることは次の3つだけです。

・群：加算・減算を自由にできる世界

・環：加算・減算・乗算を自由にできる世界

・体：加算・減算・乗算・除算を自由にできる世界

　「自由にできる」という言葉について少し解説しておきます。「加算が自由に
できる」というときは、対象の世界から2つ値a,bを取り出して、それを足し算し
た結果c（=a+b）が対象の世界に収まっているということを意味します。
　具体的な例を出して考えてみます。整数の世界{…,-2,-1,0,1,2,…}を考えてく
ださい。この整数の世界から適当に2つ選択します。ここではa=-2,b=10とします。
次にa+bを計算します。これをcとしましょう。cはc=a+b=(-2)+10=8と計算できま
す。このc=8は整数の世界のものです。このように適当に2つ選択したとき、必ず
元の世界に含まれる（これを「演算が閉じている」と表現する）ときに、この世
界は群と呼びます。
　群は減算についても言及していますが、減算は加算と同じと考えることができ
ます。なぜなら、減算はマイナスの数値の加算と考えられるからです。実際に整
数の世界が減算で閉じていることを調べてみてください。実際に手を動かして納
得することが、群・環・体の理解の近道だと思います。

　次に環とは群の性質を満たしつつ、さらに乗法について閉じている世界のこと
です。
　具体的な例として1桁の2進数の世界、即ちmod 2の世界{0,1}について考えてみ
ます。この世界の加法としてXOR演算、乗法としてAND演算と定義しておきます。
XOR演算・AND演算について覚えているでしょうか。ちょっと復習しておきましょ
う。

○XOR演算

0 XOR 0=0
1 XOR 0=1
0 XOR 1=1
1 XOR 1=0

　これは普通の足し算をして、位が上がっても1桁目だけに注目していると考える
とイメージしやすいでしょう（私の場合は同じもの同士を足したら0になると覚え
ています）。XORは○の中にプラスを入れた記号で記述されます。WBのテキストベ
ースでは表示できないため、+で表記しています。2進数の場面で+が出てきたら、
それはXOR演算だと思ってもらって構わないです。

○AND演算

0 AND 0=0
1 AND 0=0
1 AND 1=0
1 AND 1=1

　これは1同士をAND演算するとき以外はいつも0です。ANDは「かつ」と同じ意味
とイメージするとよいと思います。

　それではmod 2の世界{0,1}が環であることを数値例で確かめてみます。まず{0
,1}（単に0または1の2つの選択肢しかない）の世界から2つ選択します。ここでは
a=0,b=1とします。このときc= a XOR b = 0 XOR 1 =1となります。このcはもちろ
ん{0,1}の世界に収まっています。またd= a AND b = 0 AND 1 =0となります。こ
のdも{0,1}の世界に収まっています。よって1桁の2進数の世界は環であることが
わかります。

　最後に体について解説します。これは環の性質に加えて、さらに除算が閉じて
いる世界のことです。思いつくでしょうか。もっとも単純なものとしては実数の
集合があります。加算・減算・乗算が閉じていることは明らかです。実際に数値
例で確かめてもよいでしょう。もっとスマートな考え方としては、上記の議論で
整数の世界はすでに群（環にもなっている）であることを確かめているので、そ
れを利用してもよいでしょう。整数の世界は、実数の世界の中に含まれているか
らです。それでは問題の除算はどうでしょうか。実際に数値例で確かめてみます。
まず実数の世界から適当に2つ選択します。ここではa=1/3,b=-2とします。割り算
してe=a/bを計算すると、e=a/b=(1/3)÷(-2)=-(1/6)となります。このeは実数の
世界に収まっています。どのように2つ選んだときでも実数の世界に収まるので（
これは証明しない）、体ということになります。
　他の例を考えると、2進数の世界（桁数に制限なし）も体となります。これは各
自の課題とします。この体はGF(2)と書きます。この書き方は今回のWBで登場する
ので覚えておいてください。

　群→環→体と考えていくと、段々とそういう世界は少なくなっていきます。つ
まり「群であるが、体ではない」世界などがあるということです。整数の世界や
自然数の世界は群・環ですが、体ではありません。割り算をしてみると、必ずし
も整数とはならないからです。

　暗号の世界では特に環が重要です。加算と乗算の間に面白い関係が潜んでいて、
それが色々なことに応用できるからです。詳細についてはここでは解説しません。
暗号について学ぶうちに自然と気付くことでしょう。


■0x03.) 多項式に関する直観的定義

　今回は多項式の演算についての話なので、まず多項式というのがどういうもの
かを知っておかなければなりません。そこで多項式に関する用語についても直観
的定義を解説しておきます。

・GF(2)上の多項式：係数がGF(2)に属する多項式を「GF(2)上の多項式」といいま
す。これをGF(2)[x]と表記します。

例：0・x^3+1・x^2+0・x+1＝x^2+1はGF(2)上の多項式のひとつ。係数だけに注目
すると0101という4ビット列になる。つまり4ビットのメモリで扱えるということ
になるわけだ。

・n次：多項式の次数がnという意味。

例1：多項式：x^3+x+1⇒次数：3次

例2：定数⇒次数：0次

・既約：これ以上分解できないという意味。

例1：x^3+1は既約。

例2：x^2-1（∈GF(2)[x]）は既約でない。なぜならx^2-1=x^2+1=(x+1)^2と分解で
きる。

例3：x^64+x^4+x^3+x+1、x^128+x^7+x^2+x+1、x^256+x^16+x^5+x^2+1はすべて既
約。証明は省く。

　GF(2)上の多項式が既約とは、係数がmod 2の範囲においてこれ以上因数分解で
きないことを意味します。


■0x04.) 拡大体GF(2^n)

　GF(2)上のn次既約多項式f(u)を任意に固定します。このときGF(2)上の任意の多
項式a(u)（∈GF(2)）をf(u)で割ってみます。割った結果の答え（割られる数）を
q(u)、余りをr(u)と書くことにします。このときa(u),f(u),q(u),r(u)の4つの関
係は次のひとつの式に書き表されます。

a(u)=f(u)q(u)+r(u)

　小さい数値で考えてみると、この式は成り立つことがわかります。これは多項
式でも同様な関係式が成り立つのです（本当は数学的に証明が必要だが、事実だ
け知っておけば十分）。例えば、10（a(u)に対応）を2（f(u)に対応）で割ると、
答え4（q(u)に対応）、余り2（r(u)に対応）となる。つまり、10＝2×4+2という
関係式が成り立つはずです。

　この余りの全体の集合は要素数が2^n個であり（なぜならばr(n)はn-1次であり、
係数だけに注目すると{0,1}^nの2進ビット列で決定されるから）、体となります
（証明は省く）。この体はGF(2^n)と記述されます。体の世界から新しい体の世界
を作ることができたので、拡大体と呼ばれるものの一種です。割る数であるf(u)
の次数はn次であったので、余りの次数はn-1次以下になります。そこで、余りa(
u)は次のように書けます。

a(u)=a_(n-1)・u^(n-1)+…+a1・u+a0

　これは係数がGF(2)の要素であるn-1次多項式ですが、係数だけに注目してGF(2)
上の長さn（＝係数がn個という意味）のベクトルに捉えることもできます。

(a_(n-1),a_(n-2),…,a1,a0)　∈{0,1}^n


■0x05.) 多項式の加算

　GF(2^n)の2つの要素a,bの加算は、単純に係数をXOR演算すればよいだけです。

　例えば、次数3の多項式が2つあって、それを加算したときを考えてみます。+と
表記しているところはXOR演算であることに注意してください。

(a3・x^3+a2・x^2+a1・x+a0)+(b3・x^3+b2・x^2+b1・x+b0)
=(a3+b3)・x^3+(a2+b2)・x^2+(a1+b1)・x+(a0+b1)

　3次多項式同士を加算しても次数が上がったりせず、係数だけに注目するので、
ベクトル表記で考えるとすっきりします。

(a3,a2,a1,a0)+(b3,b2,b1,b0)=(a3+b3,a2+b2,a1+b1,a0+b0)


■0x06.) 多項式の乗算

1：GF(2^n)の2つの要素a,bの乗算を考えてみます。まずa,bを次のように定義しま
す。ここでuに関する多項式なのでa(u)などのように表記しました。

a(u)=a_(n-1)・u^(n-1)+…+a1・u+a0
b(u)=b_(n-1)・u^(n-1)+…+b1・u+b0

2：次にそれらの積c(u)=a(u)b(u)を求めます。係数はもちろんmod 2で考えます。

3：最後にc(u)を既約多項式f(u)で割った余りを求めます。これがGF(2^n)の世界
の積a・bになります。

　なぜ最後にこのような変な処理を行うのかというと、掛け算した結果GF(2^n)の
世界、つまりn次の（係数は2進数の）多項式の世界に収めるためです。ピンと来
なければ、拡大体GF(2^n)の乗算はこういう操作をすることが決まっていると無理
やり納得するというのもありでしょう。

●uを掛ける

　まずuをa(u)（127次の多項式とする）に掛ける操作を考えます。即ちb(u)=uと
いう単純な例の場合です。
　既約多項式としてf(u)=u^128+u^7+u^2+u+1を固定します。

c(u)
=a(u)b(u)
=a(u)・u
=(a127・u^127+…+a1・u+a0)・u
= a127・u^128+…+a1・u^2+a0・u

　ベクトル表記にするとわかりやすいかもしれません。

(a127,a126,…,a1,a0)
 ↓uを掛けた
(a128,a127,…,a0,0)

　ベクトルの各成分がひとつだけずれたのです。これは1ビット左シフトされたこ
とを意味します。aを1ビット左シフトすることを「a<<1」と定義することにしま
す。<<が逆になれば右シフトを意味します。1は1ビットという意味です。

　話を戻します。uを掛けた結果、最大次数の係数はa127が0か1かによって場合分
けします。

[1]a127=0のとき

a(u)=a126・u^126+…+a1・u+a0となるので、

c(u)
=a(u)・u
=a127・u^127+…+a1・u^2+a0・u
=(a126,…,a1,a0)
=(a<<1)

[2]a127=1のとき

c(u)
=u^128+a126・u^127+…+a1・u^2+a0・u
=(1,a126,…,a1,a0,0)
=(u^128)+(a<<1)

　一見するとこれは汚い結果のように見えますが、そうではありません。1ビット
左シフト部分はよいとして、u^128のところに注目してください。どこかで見覚え
はないでしょうか？　そうです。既約多項式としてf(u)=u^128+u^7+u^2+u+1を考
えていました。法u^128+u^7+u^2+u+1の世界で考えると、u^128というのは次のよ
うに変形できます。

u^128 (mod u^128+u^7+u^2+u+1)
=-u^7-u^2-u-1　（∵u^128+u^7+u^2+u+1=0）
=u^7+u^2+u+1　（∵各係数はGF(2)なので、-1=1 (mod 2)）

　よって、(u^128)+(a<<1)は1ビット左シフトしてから、u^7+u^2+u+1を足すとい
うことになります。加算は係数同士のXOR演算だと説明しました。u^7+u^2+u+1を
2進数にすると、0…010000111（「0…0」部分は0が120桁）＝0^(120)10000111の
ようになります。

　ゆえに、次が成り立ちます。

a(u)・u
=a<<1（[1]のとき）　or (u^128)+(a<<1)（[2]のとき）

　これはGF(2)[x]において、uを掛けるというのは、1ビット左シフトするか、1ビ
ット左シフトしてからXOR演算するということを意味します。これはコンピュータ
と相性がよく、コンピュータ上で暗号技術を利用するときはこうした仕組みを利
用して設計されています。

　乗算は左シフトでしたが、除算は右シフトすることになります。上記の議論に
おけるuを掛けたところを、u^(-1)を掛けると考えて議論を進めていけば、理解で
きると思います。これは各自の課題としておきます。


■0x07.) おわりに

　今回の話題は暗号の話というよりは情報数学の話でした。暗号の実装に興味の
ある方は知っておくといつかは役に立つかもしれません。暗号の理論だけに興味
ある人は今回の話題が理解できなくても全然大丈夫だったりします。
　来月からはやっと皆が大好きな（？）公開鍵暗号系について入りたいと思いま
す。

　ではまた来月に会いましょう。


