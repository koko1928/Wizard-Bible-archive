x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

--- 第○章: はじめてのハッキング　〜Linuxの概要〜 ---

著者：Defolos

x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x


■0x01.) はじめに

　こんにちは、Defolosです。
　今回はハッキングの簡単な説明について数回に分けて解説したいと思います。
細かな知識よりも実際に動作させることができる、体験できるということに主軸
を置きつつ、必要な知識を最低限解説いたします。このレポートでは、ハッキン
グを実行してみたいが具体的な方法を知らないという方を対象に、簡単なハッキ
ングを体験していただき、具体性をもって今後の学習に役立ててもらうことを目
的とします。


■0x02.) ここで論じるハッキング

　ハッキングとはあいまいで広義的な言葉です。例えば、他人のコンピュータに
無断で侵入する行為はハッキングと呼ばれますが、プログラミングにおいてエレ
ガントに処理させてしまうこともハックと呼ばれます。他にも「かしこく物事を
こなす」という動詞で使われたり、ハードウェアの動作を変更することもハック
と呼ばれます。このように非常に広義的な言葉ですので、このレポートで論じる
ハッキングがどの意味を指すのかを明確にする必要があります。

　このレポートでは、簡単に言えば「無許可で他人のコンピュータに侵入する行
為」をとりあげます。ネットワークからの侵入ではなく実際にコンピュータを触
れ、ユーザとしてログインできる状態からバッファオーバフローというテクニッ
クを使ってコンピュータをのっとる方法について論じます。また、コンピュータ
のOSはLinuxであるという前提で解説しています。
　もちろん、このレポートで本当に見ず知らずの他人のコンピュータに侵入する
わけではありません。自分で用意したコンピュータにアタックをおこないますの
で、法律に触れることはありません。

●ハッキングの目的

　ここでのハッキングの目的は権限を奪うことです。OSには通常、後述するよう
に一般ユーザ権限と管理者権限が存在します。一般ユーザ権限でログインし、な
んらかの方法で管理者権限を奪うことが今回の目的です。多くのLinuxでは一般ユ
ーザ権限の場合、シェルのプロンプトが「$」になっています。一方管理者権限の
場合はプロンプトが「#」になっています。つまり目的はシェルのプロンプトを
「$」から「#」にかえることです。
　詳しくは後述する「■0x04.) Linuxの概要」を参照してください。

●前提知識

　前提知識としましては次のような知識が必要、あるいは知っているほうが理解
しやすいです。次に挙げる前提知識はレポート内で必ず一度は解説します。レポ
ートの説明でわからないという方は他の参考書から知識を得てください。

○OSについての基礎知識

　コンピュータにはOSが必ずインストールされており、そのOSの制御にしたがっ
て動いています。OSについての知識を得ることはプログラムが実行される環境に
ついて知ることです。これはサッカーなどスポーツのルールに似ています。ルー
ルという規範の中でプレイヤーが走りまわるように、OSという規範の中でプログ
ラムが動きます。
　数あるOSの中でも特にハッキングにおいて必須とされるのがUNIXあるいはLinu
xについての知識です。このレポートではLinuxについて簡単に解説を行います。

○プログラミングについての知識

　プログラムは命令の集合です。プログラムのおかげでコンピュータはただの箱
から情報処理機器として価値あるものになります。プログラミングについての知
識があればコンピュータに命令を下すことが可能になります。ハッキングはコン
ピュータに命令してはじめて可能になりますので、ハッキングにはプログラミン
グの知識は必要不可欠です。
　特にC言語とアセンブリ言語についての知識が必要となります。C言語は非常に
汎用的なプログラミング言語で一般的なアプリケーションからOSまで記述でき、
LinuxもC言語で書かれています。ハッキングに用いられる言語ではデファクトス
タンダードの地位を築いています。アセンブリはシェルコードを記述するのに用
います。これらについては次回解説いたします。

○ハードウェアについての知識

　コンピュータはOSやプログラムだけで動作しているわけではありません。必ず
CPUやメモリなどハードウェアが存在して動作しています。
　ハードウェアの知識をプログラマが直接利用する範囲はそれほど多くありませ
んし、ハードウェアというのはソフトウェアの分野とは非常に異なった専門分野
です。通常プログラマはハードウェアについてあまり深い知識を必要としません
が、プログラムがどのようにメモリを利用するのか、メモリに格納された命令は
どのように実行されるのかといった最低限度の知識は必要とされます。このレポ
ートで解説するハッキングでもこれらの知識が必ず必要になります。

　これらの前提知識はレポートの前半で解説します。上記の知識が十分にある方
は後半まで読み飛ばしてもらってもかまいません。ハードウェアの基礎知識です
が、これを効果的に習得するには基本情報技術者試験の解説書の「コンピュータ
システム」についての章を読むとよいでしょう。


■0x03.) ハッキングの手順

　ハッキングにはある決まった手順があります。基礎を作らずに建築ができない
ように、攻撃対象の下調べもせずに侵入することはできません。非常に大まかな
手順で見てみますと、次のようになります。

1：下調べ
2：侵入
3：後始末
4：裏口作成

　これは非常に大まかな推移を表したものです。それぞれについてより詳しくみ
ていきましょう。

●下調べ

　攻撃対象についてできるだけ詳しく調べます。例えばどのOSのどのバージョン
を使っているか、どういったサービスを展開しているか、それぞれのサービスに
使われているサーバプログラムのバージョンはいくつかといったことから、シス
テム管理者のメールアドレスや実力、システムを所有する会社などを調べます。
　この過程で用いられるテクニックとして、Pingによってネットワークで稼動し
ているサーバを検出するPingスイープ、対象サーバの稼動中のサービスを特定す
るポートスキャン、OSの特定、ユーザ/グループの列挙などが挙げられます。ソー
シャルエンジニアリングなども大いに役立ちます。この過程のドキュメントはネ
ットや書籍で多く紹介されているため、このレポートでは特に大きくは取り上げ
ません。

●侵入

　おそらくハッキングの過程の中でも最もあいまいで、具体的な手順がわかりに
くい過程ではないかと思います。侵入も大きく分けてコンピュータにアカウント
を持っている状態からコンピュータをのっとる方法と、アカウントさえ持ってい
ない状態からコンピュータをのっとる方法の2種類があります。基本的にどちらも
同じ手法を使ってコンピュータをのっとりますが、後者はネットワーク越しにす
べての権限を奪う場合に用いられる方法です。よく「侵入」という表現が使われ
ますが、むしろ管理者権限を取得するという表現のほうがあっているように思い
ます。このレポートでは主にこの過程について詳しく解説します。

●後始末

　コンピュータはコンピュータ内で行われた操作や起きた出来事などを逐一記録
しています。これはログと呼ばれ、侵入した形跡もログファイルにしっかりと記
録されます。これを本来のシステム管理者に見られてしまいますと、不正アクセ
スがあったことが発覚してしまいます。インターネットは完全に匿名ではなく、
日時とISPのログファイルとの照合で個人が特定されてしまいますので、犯行が発
覚しないようにログファイルの削除や改竄を行います。物理的犯罪に置き換える
なら、証拠が残らないようにすべてての指紋をぬぐい取る作業と同じです。

●裏口作成

　一度侵入したコンピュータにもう一度侵入するとき、また同じ手順を踏むのは
面倒ですし、脆弱性が防がれている可能性もあります。侵入するとは管理者権限
を取得することと同一ですので、ありとあらゆる操作が行えます。実行するだけ
で管理者権限を与えるプログラムを作成したり、ネット上からコマンドを受け付
け管理者権限で全てのコマンドを実行するようなサーバプログラムを起動させる
などで裏口を作成することができます。侵入したハッカーだけが知る勝手口のよ
うな存在ですので、そこからたとえて裏口（バックドア）と呼ばれます。このレ
ポートでも最も簡単なバックドアを作成しています。


■0x04.) Linuxの概要

　世界のPCの95％はWindowsが占めるといわれている現在、どうしてLinuxの使い
方について学ぶのでしょうか。これには明確な理由があります。Windowsが大多数
のシェアを占めるのはPCでの話であって、メインフレームやサーバコンピュータ
ではほとんどのOSはLinuxあるいはUNIXが占めています。通常のハッカーの攻撃対
象となるコンピュータは個人のPCよりも企業のサーバである場合がほとんどです。
私たちがまず知るべきOSはLinuxであるといえます。

●Linuxの特徴

　Linuxは1991年にフィンランドのヘルシンキ大学の学生であったリーナス＝トー
バルズがUNIXを元に開発したOSです。開発当時はアセンブリ言語でプログラミン
グされていましたが、後にC言語で書き直されています。

　LinuxはオープンソースのUNIXライクな（UNIXに似た）OSで、メインフレームか
ら携帯電話、サーバなど非常に多くの分野で利用されています。Linuxとは本来、
OSのカーネル（中核）部分のことを指しますが、カーネルはプロセス管理や記憶
管理などを行うだけで、文章を書いたりWebサイトをみたりすることはできません。
つまりカーネルだけでは我々がOSに求める機能を実現することはできません。で
すので、OSにはカーネルのほかにワープロソフトやWebブラウザ、メールソフトな
どが付属しています。
　Linuxと一口にいっても、Red HatやDebian、SUSE Linuxなど様々な種類があり
ます。これらの違いは、カーネルに付属するソフトウェアの種類の違いや、開発
理念の違いなどです。例えばSUSE Linuxはグラフィカルなデスクトップに特化し
ており、Red HatはRPMというパッケージ管理ソフトが付属しています。それぞれ
に特化しているものや理念の違いなどがあり、こういったLinuxの種類のことをデ
ストリビューションと言います。このレポートではDebianというデストリビュー
ションのDebian GNU/Linux 3.1r1（Sarge）を用いて解説します。インストール時
のパッケージコレクションは「デスクトップ環境」でインストールしていますが、
他のパッケージコレクションでも問題はないでしょう。Debianのインストールに
ついては他のドキュメントを参照するか、書店でDebian関係の雑誌や書物をお買
い求めください。

●まずは使ってみよう

　まずはLinuxをインストールしましょう。LinuxはDebian GNU/Linux 3.1r1(Sar
ge)が望ましいです。KnoppixやFedora Coreではうまく実験が進められない可能性
がありますので、少なくともDebianを利用するようにしてください。Linux用のコ
ンピュータを別に用意するのは簡単ではありませんので、他のOSをインストール
しているHDDの空き領域にLinuxをデュアルインストールするとよいでしょう。注
意点はWindowsとデュアルインストールする場合に先にWindowsからインストール
することと、インストール時に「全てのパーテーションを削除」のような項目を
選択しないことです。インストールの方法は他のドキュメントを参照していただ
くこととして愛割させていただきます。

○シェル

　Debianがインストールできましたら、このレポートで主な操作画面となるシェ
ル（ターミナル、コンソールとも呼ばれます）を使ってみましょう。シェル(She
ll)とはOSの一部で、ユーザからの命令を受け付けてカーネルが理解できる命令に
変換し、カーネルに引渡してプログラムの起動やファイルの削除などを行う役割
を持ちます。また、カーネルからの出力を人が理解しやすい形に変換して表示す
る役割も持っています。通常シェルは文字によって入出力を行うCUIですが、Win
dowsやX Window SystemのようなGUIはグラフィカル・シェルとも呼ばれます。シ
ェルという名前はOSの中核であるカーネルを貝殻のように囲って命令を受付け、
それをカーネルに渡すためです。

                                     +---------------------------------------+
                                     |               Shell                   |
+--------+                           |                  +------------------+ |
|        |---------[input]---------->|====[convert]====>|                  | |
|  User  |                           |                  |      Kernel      | |
|        |<--------[output]----------|<====[convert]====|                  | |
+--------+                           |                  +------------------+ |
                                     |                                       |
                                     +---------------------------------------+

　シェルを起動してみましょう。Linuxの場合シェルはプログラムとして実装され
ていますので、他のプログラムと同様にメニューなどから起動させます。正確に
はグラフィカルなインターフェースの裏側ではOS起動時に起動された根源となる
シェルが動いています。私たちがシェルを起動させる時は、その根源シェルに新
たにプログラムであるシェルを起動する命令を送り、それを根源シェルが解釈し
て新しくシェルを立ち上げます。そのためシェルを複数起動させたり、プログラ
ムの中から別のプログラムを起動するようにシェルを起動させることが可能です。
　デスクトップにタスクバーがあると思います。この中にコンピュータの形をし
たアイコンがありますので、クリックしてください（図1）。アイコンが見つから
ない場合はタスクバー左端の[アプリケーション]→[Debianメニュー]→[アプリケ
ーション]→[シェル]→[Bash]で起動できます（図2）。

（図1）http://ruffnex.oc.to/defolos/text1/figure/wb30_f00.jpg
（図2）http://ruffnex.oc.to/defolos/text1/figure/wb30_f01.jpg

　シェルが起動するとウィンドウが開き、文字が表示されます（図3）。文字や背
景の色は環境によって異なる可能性があります。また、グラフィカル・シェル（X
 Window）を導入していない場合はログイン画面から根源シェルが表示されますが、
この場合白い文字に黒い背景になっていると思います。

（図3）http://ruffnex.oc.to/defolos/text1/figure/wb30_f02.jpg

　シェルにはbashやcsh、tcshなどいくつかの種類があり、bashはcshや他のシェ
ルを参考に機能拡張されたシェルです。Linuxの標準ではbashが使われます。シェ
ルの操作は文字だけで行い、決められたコマンドを入力することでファイルの移
動やフォルダの表示などを行います。シェルに「pwd」と入力してください。次の
ように何か表示されたと思います。

-----
defolos@glazheim:~$ pwd
/home/defolos
-----

　pwdコマンドはカレントディレクトリを表示するコマンドです。ディレクトリと
はファイルを格納した入れ物のようなもので、Windowsではフォルダと呼ばれます。
カレントディレクトリとは「現在ユーザが作業を行っているディレクトリ」とい
う意味です。
　このようにコマンドで様々な操作を行っていきます。必要最低限のコマンドは
後述します。ここではLinuxが起動できてシェルがどういった感じのものなのか感
覚的に理解していただければ結構です。

●Linuxにおける権限

　通常のOSには権限という概念が存在します。権限とは操作を許可する範囲と考
えてもらえれば良いです。例えばファイルに対して書き込みを行うという操作は
そのファイルへの書き込み権限が必要です。コンピュータの管理を行う場合、ア
クセスできないファイルや実行できない操作があると管理ができませんので、あ
りとあらゆる権限を持った管理者権限というアカウントが存在します。これはLi
nuxではrootと呼ばれるアカウントです。Windowsの場合はAdministratorという特
別なアカウントが管理者権限アカウントに該当します。

○マルチユーザとアクセス権限

　Linuxでは同じコンピュータに複数のユーザが同時にログインし作業を行うマル
チユーザという考え方が強く、ログインするユーザは数多くいるユーザのうちの
一人としてログインします。各ユーザーには専用のデスクトップやディレクトリ
が用意されますが、他のユーザのデスクトップなどに移動することも可能です。
コンピュータを起動してログインすると一般ユーザ権限でログインすることにな
ります。一般ユーザ権限は管理者権限とは違い、操作に多くの制限があります。
例えば一部のファイルなどは読むことができませんし、サーバプログラムなどの
ように実行できないプログラムもあります。
　実際の例を見てみましょう。シェルに次のようにコマンドを入力してください。

-----
defolos@glazheim:~$ cat /etc/shadow
cat: /etc/shadow: 許可がありません
-----

　catコマンドはファイルの内容を表示するコマンドです。shadowファイルとはロ
グインパスワードが暗号化されて保存されているファイルで、読み込みの許可は
rootにしかありません。そのため、一般ユーザ権限から表示しようとすると、許
可がないというエラーが返されます。
　ファイルへのアクセス権限には「読み込み（r）」、「書き込み（w）」、「実
行（x）」の3つの種類があり、これらの権限は「ユーザ」、「グループ」、「そ
の他」の3つのフィールドにそれぞれ設定することができます。「ユーザ」はその
ファイルの所有者（作成者）が許可される権限を設定します。「グループ」はフ
ァイルの所有グループに属するユーザに許可される権限を設定し、「その他」で
はそれ以外のユーザに対しての権限を設定します。ファイルに設定されている権
限を確認するにはlsコマンドを用います。

-----
defolos@glazheim:~$ ls -l /etc/shadow
-rw-r-----  1 root shadow 793 2006-11-11 09:54 /etc/shadow
-----

　lsコマンドはディレクトリに含まれる下位ディレクトリやファイルを表示する
コマンドですが、-lオプションを指定することで設定されている権限を確認する
ことができます。ユーザ、グループ、その他の順にフィールドがあり、そのフィ
ールドにr、w、xが設定されます。この例では先ほどのshadowファイルに設定され
たアクセス許可を確認しています。「-rw-r-----」の部分がそれぞれ順番にユー
ザ、グループ、その他のフィールドであり、一番最初の「-」はファイルの種類
（-ならファイル、dならディレクトリ）を表しているため無視して考えます。す
るとファイルの所有者は読み込みと書き込みの許可があり、グループには読み込
みの許可があることがわかります。それ以外のユーザに対しては一切の許可があ
りません。rootと書かれた部分はこのファイルの所有者の名前です。shadowファ
イルはrootが所有者でありユーザdefolosはrootではありませんので、shadowファ
イルは表示できないことがわかります。

○権限の確認

　それでは自分がどの権限でログインしているのかを確認しましょう。Linuxの場
合はシェルを開いたとき、プロンプトの前の記号が「$」のときは一般ユーザ権限
で、「#」のときは管理者権限であるのが通常です。
　しかし、これらの記号は管理者が自由に変更できるため、もしかすると一般ユ
ーザ権限でも「#」の記号がついているかもしれません。ですので、より正確に自
分の権限を知りたい場合はwhoamiコマンドを利用します。シェルを開き、whoami
と入力します。

-----
defolos@glazheim:~$ whoami
defolos
-----

　ユーザ名が返ってきたときは一般ユーザ権限です。

-----
glazheim:/home/defolos# whoami
root
-----

　rootと返ってきた場合には管理者権限です。管理者権限はそのコンピュータ上
で神のように振舞えます。例えばユーザを削除したり、パスワードが保存されて
いるファイルを閲覧することさえできます。この神の権利を奪うことが今回のレ
ポートの目的です。

　rootというのは特別なアカウントですが、suコマンドを用いることで一般ユー
ザ権限からrootアカウントにログインすることが可能です。次のようにコマンド
を入力してください。Password:にはrootのパスワードを入力します。覗き見防止
のため、パスワードの入力は表示されないようになっています。

-----
defolos@glazheim:~$ su
Password:
glazheim:/home/defolos#
-----

　これで権限が管理者になりました。rootアカウントはコンピュータ起動時のロ
グイン画面からログインすることはできず、このように一般ユーザ権限からsuコ
マンドでログインします。わずらわしいように感じられますが、rootはありとあ
らゆる権限を持っているため、システムの維持に必要なファイルでも間違えて消
してしまう可能性があります。必要なときにだけrootになり必要性がなくなった
ら一般ユーザ権限に戻ることで必要なファイルを消してしまう危険性を抑えてい
ます。このような使い方をするため、起動時のログイン画面からはrootでログイ
ンできないようになっています。rootから抜けるにはexitコマンドを使います。

○SUID

　アクセス権限がなければプログラムの実行やファイルの読み書きが行えないこ
とはわかりました。しかし、ただ権限にしたがって制限するだけではコンピュー
タをうまく管理することはできません。例えばパスワードの変更を考えてみまし
ょう。
　それぞれのユーザのログインパスワードを変更する際、Linuxではpasswdという
プログラムを使ってshadowファイルを書き換えます。これは/etc/passwdのパスワ
ードファイルとは違い、実行形式のプログラムです。shadowファイルはrootにし
か書き込み権限がないことは確認できていますが、パスワードはそれぞれのユー
ザが自由に変更できなければなりません。もしrootだけがパスワードを変更でき
るようですと、それぞれのユーザはパスワードを変更したいときには毎回rootに
頼んで変更してもらわなければならなくなります。これでは大変非効率なので、
passwdはある仕組みを用いてこれを解決しています。passwdをlsコマンドで見て
みましょう。

-----
defolos@glazheim:~$ ls -l /usr/bin/passwd
-rwsr-xr-x  1 root root 26840 2006-08-12 08:24 /usr/bin/passwd
-----

　ユーザフィールドの実行権限の部分が「s」になっています。これはSUID（Set
 User ID）がセットされた状態であることを表しています。SUID権限がセットさ
れたプログラムを実行すると、誰がプログラムを実行したかに関わらず、実行ユ
ーザIDがファイルの所有者のユーザIDに変更されてプログラムが実行されます。
プログラムが終了すれば実行ユーザIDは元に戻ります。
　パスワード変更の例に戻りますと、パスワードを変更したいユーザはpasswdプ
ログラムを実行します。passwdはすべてのユーザが実行できますが、passwdによ
って変更されるshadowファイルはroot以外書き込みできないため、そのままでは
エラーが発生します。そこでpasswdを実行する際、実効ユーザIDをrootに変更す
ることで、あたかもrootがpasswdを実行したかのようにshadowファイルを書き換
えることができます。所有者がrootでSUID権限が設定されているプログラムは、
特にSUID rootプログラムと呼ばれます。SUID rootプログラムは言い換えるなら、
プログラムが実行されている間rootの権限を持つプログラムだといえます。これ
は非常に重要な脆弱性に繋がる危険性があります。

　前述したように、プログラムからシェルを起動することが可能です。もしSUID
 rootプログラムが正常に終了せずに、途中でシェルを起動してしまったとしたら
どうなるでしょう。SUID rootプログラムは起動している間root権限を持つため、
そこから呼ばれたシェルはroot権限で実行されたことになります。
　次に本当にシェルからシェルを呼び出せるのか、プログラム内からシェルを呼
び出せるのか、SUIDをセットした場合の挙動のテストを行います。

○シェルからシェルを起動

　シェルからシェルを呼び出せるかどうかは次のようにして確認できます。ここ
ではbinディレクトリにあるshというシェルを起動しています。bashも同じディレ
クトリ内にありますがbashはすでに起動していますので、bashを起動させても表
示が変わらず分かりにくいためshを起動させています。

-----
defolos@glazheim:~$ /bin/sh
sh-2.05b$
-----

　次にプログラム内からシェルを呼び出してみます。次のような非常にシンプル
なソースから作ったプログラムを実行してみます。

-----shtest.c
#include <stdio.h>

int main (void){

	execl("/bin/sh", "sh", 0, 0);

	return 0;
}

-----

　5行目のexecle関数で/bin/shを呼び出しています。このソースコードをshtest
.exeという名前でコンパイルし、実行すると次のような結果が得られます。コン
パイルとは人が読みやすいように書かれたソースコードをコンピュータが理解で
きる命令に変換することです。詳しくは次回解説します。

-----
defolos@glazheim:~$ ./shtest.exe
sh-2.05b$
-----

　シェルから呼び出したときと同じように、シェルを起動することができました。
シェルが呼び出されるときのシェルやプログラムの実行はdefolosという一般ユー
ザ権限によって行われたため、新たに起動したシェルも一般ユーザ権限で起動し
ています。ここでshtest.exeをSUID rootプログラムにした場合にどのような挙動
になるか確認してみましょう。SUID rootプログラムにするには対象のプログラム
の所有者をrootに変更し、SUIDをセットする必要があります。この作業はrootで
なければできないので、一度suコマンドでrootになります。その後、次のように
コマンドを入力します。

-----
glazheim:/home/defolos# chown root shtest.exe
glazheim:/home/defolos# chmod +s shtest.exe
-----

　chownコマンドは対象ファイルの所有者を変更するコマンドです。shtest.exeの
所有者をrootに変更しました。次のchmodコマンドは対象ファイルのアクセス権限
を変更するコマンドです。shtest.exeにSUID権限を追加しています。この2つの作
業でshtest.exeがどのように変更されたのか確認しましょう。

-----
glazheim:/home/defolos# ls -l shtest.exe
-rwsr-sr-x  1 root defolos 11532 2006-11-13 01:40 shtest.exe
-----

　所有者がrootに変更され、SUIDがセットされています。この状態でshtest.exe
が実行されれば、誰が実行したかに関わらず所有者であるrootの権限で実行され
ます。そして5行目のexecle関数で、権限がrootのままシェルが起動します。一般
ユーザ権限に戻ってshtest.exeを実行してみましょう。

-----
defolos@glazheim:~$ ./shtest.exe
sh-2.05b#
-----

　シェルの記号は変更されていますが、本当にrootなのか確かめる意味でwhoami
コマンドを使用します。

-----
sh-2.05b# whoami
root

　rootであることが確認できました。これは最も単純なバックドアの例であり、
一般ユーザ権限からプログラムひとつを実行するだけでrootになることができま
す。このようにSUID rootプログラムは誰がプログラムを実行したかに関わらずr
oot権限でプログラムが実行されます。
　残る問題は、どのようにSUDI rootプログラムの流れを変えて途中でシェルを起
動するかです。

●必要最低限のコマンド

　Linuxは近年ではWindowsのようにグラフィカルなシェル（X Window System）を
備えており、マウスでファイルを移動したりアイコンをクリックしてプログラム
を起動したりといったGUIの操作もできるようになっています。しかしGUIはあく
までCUIシェルに画像をくっつけたようなものですので、GUIでは行えない操作は
多くあります。このレポートでもCUIでしか行えない操作を必要としますので、こ
こでLinuxを操作するために最低限必要なコマンドを挙げます。書式はcommand [
option] argvとなっており、[]でかこった部分は省略可能です。

○man name | -k keyword

　コマンドの使い方を表示します。使いたいコマンドの名前がわかっている場合
はnameで直接指定し、名前がわかっていない場合は-kオプションを指定して検索
したいキーワードを入力することでコマンドの検索ができます。

○ls

　ディレクトリ内のファイルや下位ディレクトリを表示します。Windowsではフォ
ルダアイコンをクリックし、ウィンドウを開いてフォルダ内のファイルや下位フ
ァイルを表示しますが、これと同じことを行っています。ディレクトリとフォル
ダは同じ概念のものです。Windowsではディレクトリのことをフォルダといいます。
なお、カレントディレクトリは「.」で、上位ディレクトリは「..」で表されます。

○cd directory

　カレントディレクトリを[directory]に変更します。移動したいディレクトリを
引数で指定すると、そのディレクトリに移動します。引数なしで実行するとホー
ムディレクトリに移動します。

○cp source destination

　ファイルのコピーを行います。[source]にコピー元ファイルを指定し、[desti
nation]にコピーしたあとのファイル名を指定します。

○rm file

　ファイルの削除を行います。

○chown [-R] [owner] file

　ファイルやディレクトリの所有者を[owner]に変更します。-Rオプションを選択
すると指定したディレクトリ内の全てのファイルの所有者を[owner]に変更します。
このコマンドはプログラムをSUID rootプログラムへ変更する場合に使用します。
rootだけが実行できるコマンドです。

○chmod [-R] type file

　ファイルやディレクトリのアクセス許可を変更します。-Rオプションを選択す
ると指定したディレクトリ内のすべてのファイルの許可をtypeに変更します。フ
ァイルあるいはディレクトリの所有者しかアクセス許可を変更できません。指定
方法には絶対方式と相対方式があり、絶対方式は8進数の数字によって指定します。

[絶対方式]

・0400 所有者が読み込める 
・0200 所有者が書き込める 
・0100 所有者が実行できる 
・0040 groupに属するユーザが読み込める 
・0020 groupに属するユーザが書き込める 
・0010 groupに属するユーザが実行できる 
・0004 その他のユーザが読み込める 
・0002 その他のユーザが書き込める 
・0001 その他のユーザが実行できる 

[相対方式]

・u,g,o,a 所有者・グループに属するユーザ・その他のユーザ、全員 
・r,w,x   読み込み属性・書き込み属性・実行属性 
・+/-　　 属性をONにする/OFFにする 
・s       Set ID


■0x05.) 参考文献

・「Hacking：美しき策謀」　Jon Erickson著　村上 雅章訳　ISBN4-87311-230-3
　http://www.oreilly.co.jp/books/4873112303/

・「ハッキング対策マニュアル」ISBN4-7973-2145-8

・「セキュリティ夜話　バッファオーバーフロー（BO)系列　（１）Aleph Oneに
よるスタック破壊の楽しみと恩恵」
　http://www.asahi-net.or.jp/~vp5m-snd/sec/tech/Phrack49-14.html


■0x06.) さいごに

　今回は前提知識の確認として、ハッキングに必要なLinuxについての知識につい
て解説いたしました。
　次回はC言語とアセンブリ言語についての基礎知識を解説したいと思います。し
ばらくは前提知識の確認が続きます。これらの知識はハッキングと密接に結びつ
いており、必ず必要となる知識です。基礎がしっかりしていれば後の理解も早い
と思いますので、ゆっくりと前提知識の確認を行いたいと思います。
　それでは、またお会いしましょう。

