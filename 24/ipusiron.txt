x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

--- 第10章: Google Hacking 〜 基礎編 〜 ---

著者：IPUSIRON

x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x


■0x01.) はじめに

　インターネットユーザーならいまやGoogleを知らない者はほとんどいないでし
ょう。Googleの登場以前は、日本の検索エンジンでロボット検索と言ったら、Go
o（名称が似ているが、Googleとはまったく別物）が有名でした。しかしながら、
Googleの登場すると、トップページのシンプルさ、そして何よりも検索能力の高
さから、Googleの名を世間に広めることになりました。
　近年、Googleを検索能力を脆弱なWebサイトを発見するための方法として利用さ
れてきています。昔からこうした考え方はありました。例えば、本当は誰にでも
アクセスされてはいけない個人情報がWebスペースにアップされていることもあり、
それを発見するのにGoogleが活用されていたわけです。他にもクレジットカード
番号、WAREZやシリアルナンバーを発見するのにも使われていました。こうした方
法があまりにも効果的に働くため、Google Hackingという名称まで付いたわけで
す。
　今回は、このGoogle Hackingについて解説したいと思います。


■0x02.) Google Hacking

　まず、Google Hackingとは何か明確にしておきましょう。Google Hackingとは、
Googleを利用して脆弱なWebサイトを発見する手法のことです。

　アカデメイア内や『ハッカーの教科書』などで何度も繰り返して述べているこ
とですが、サーバー侵入といったアタックを仕掛ける際には、アタック前に特定
のターゲットの情報を可能な限り調べなければなりません。その情報を取っ掛か
りに、適切なセキュリティホールを調べ、それに対応するExploitなどを作成・利
用するわけです。
　また、特定のIPアドレス帯域やドメイン領域に対してポートスキャナーなどで
絨毯爆撃をして、脆弱なホストを見つけて、それをターゲットとして設定する方
法もあります。かつては、この手法はスクリプトキディたちの手口としてよく非
難されることもありました。
　さらに、最近のクラッキング界では、Google Hackingにより脆弱なWebサイト（
基本的にホストではない点に注目）を発見し、それをターゲットとして設定する
アプローチも見受けられてきたのです。

●メリット

　かつてのサーバー侵入の前段階のアプローチといえば、Pingerでホストの存在
しているIPアドレスをリスト化して、それらのIPアドレスに対してポートスキャ
ナーでポートが開いているポート（提供されているサービス）を探すというのが
定石でした。Google Hackingでは、基本的にWebサイトが前提となっているので、
ポート80（HTTP）を開いているサーバーを探し出すことができます。そして、う
まくキーワードを設定するだけで、そのサーバー内に設置されている脆弱なWebア
プリケーションを発見できるわけです。Webアプリケーションがインターネット上
に普及し始めたことに、比例してGoogle Hackingの効果も上がっていったのでし
ょう。

　また、スキャナーを使う方法は、基本的に時間がかかるのです。ブロードバン
ド化が進んだ現代ですが、数百や数千といったIPアドレス範囲に対して、ポート
スキャナーを実行するのは一晩以上時間がかかったりします。ただし、これはス
キャンするポートの数に依存します。Google Hackingの場合、すでにGoogleクロ
ーラーがHTTPサービスに焦点を絞ってインターネット上の隅々まで行き、検索処
理を円滑に行うためにデータベース化していくわけです。この作業はアタッカー
側がやる必要がありません。あくまでGoogle側がすでに実行していることなので、
アタッカー側は適切なキーワードを入力すれば、数秒でそれに対応するWebサイト
の一覧が表示されるわけです。
　しかし、脆弱性が存在しつつも、リスト化されていないWebサイトが、インター
ネット上には存在します。また、リストも重複したり、解説サイトが引っかかっ
たりと完璧ではありません。完璧ではありませんが、効率さのほうが圧倒的に有
利に働くということです。

　最後にまとめておきましょう。

・脆弱なWebアプリケーションを設置してあるWebサイトを発見できる。
・そのためには適切なキーワードを入力する。
・結果は数秒で得られる。しかも、脆弱なWebサイトのリスト化された結果を得る
ことができるため、アタックの全体時間を短縮・効率化できる。


■0x03.) 実践例　その1

　かつて、PHP nukeと呼ばれるWebアプリケーションがありました。スラッシュド
ットや現在のblogのようにヘッダー、フッダー、サイドにブロック単位に分かれ
ていて、全体が動的に反映する仕組みです。Webサイト全体がCGIで動的に動くと
考えてもらえればよいでしょう。MT（Movable Type）、Xoops、Zopeなどもそれに
似たようなタイプのものです。ちなみに、大昔に存在したUGツールのWin Nukeと
はまったく関係ありません。このころは、blogが全然流行っておらず、今のよう
に初心者でも簡単にレンタルサービスとして借りることができず、似たようなこ
とをしたければ、PHP nukeなどをWebサーバーにインストールしなければならない
のです。

　2002年10月16日に、PHPToNukeにリモートからファイルを閲覧されてしまうとい
う脆弱性が発見されました。 
　PHPToNuke（phptonuke.php）はPHP Nukeサイトの中間にPHPスクリプトを挿入さ
せるPHP Nuke用AddOnスクリプトです。
　この脆弱性はアプリケーション上の脆弱性ではなく、PHP自体の特徴的な脆弱な
仕様が原因なようです。デフォルトで、指定したファイルを開くことができるから
です。
　対策は、php.iniファイル内において、利用するopenbase_dirを設定することに
よって、これをオーバーライドし、指定したパスのサブセットに対するファイル
操作を規制することです。この対策方法は、Webアプリケーションをインストール
した個々のサイト管理者がこの対策をしなければならないのです。Webサーバーの
管理者ではないことに注目してください。Apacheなどにセキュリティホールが発
見されれば、Webサーバーの管理者が対策しなければなりません。それはサーバー
のセキュリティを維持するため、サーバー管理者として当然の義務と言えます。
しかしながら、Webサイトの管理者はセキュリティの意識がそこまで高くありませ
ん。普通なら、掲示板が荒らされないように注意するぐらいでしょう。サイト運
営を放置して、宣伝だけでスパム状態の掲示板があるのを見たことあるはずです。
これと同じ状況が他のWebアプリケーションであるPHP nukeでも少々ありました。
ヘルプファイルを個人だけで読んでインストールするのは難しいので、定番とさ
れるマニュアルまたは文書を沿ったままインストールされたWebサイトが放置され
ているのです。つまり、そのマニュアルや文書にセキュリティ対策のことが書い
てないと、Webサイトのほうもセキュリティ対策されていない状態になるのです。

　話を戻しましょう。先ほど言ったPHPToNukeの脆弱性を利用するには、まずPHP
 nukeを利用しているWebサイトを見つける必要があります。その際に、Googleを
用いて、PHP nukeを利用しているWebサイトをリスト化して表示するのがアタッカ
ーの行動として有効なわけです。そこで「php nuke」のキーワードで検索しても、
PHP nukeを利用しているWebサイトを発見できますが、まだ結果にノイズが多いは
ずです。PHP nukeの解説ページ（なのにPHP nukeを使っていないところ）、単に
ニュースや紹介記事だけのWebページなどが含まれているからです。そこでノイズ
を消すために、PHP nuke特有のファイルを考えます。私がすぐに思いついたのは
「index.php」ファイルです。しかし、これだけでは、他の「index.php」を利用
しているWebアプリケーションを利用しているWebページも引っかかるので、さら
に「nuke」というキーワードを追加しましょう。最終的に、「nuke "index.php"」
を利用しました。実際利用してみるとわかりますが、ほとんどノイズなしなく、
PHP nukeのWebサイトのリストが効率よく生成されたはずです。
　後は、これらのWebサイトに対して、片っ端から脆弱性に対応するExploitを用
いていきます。今回のExploitはURL型なので、単にブラウザに入力するだけで働
きます。Webアプリケーションはこうしたタイプの脆弱性が多いことも特徴と言え
ます。
　今回は、次の書式のURIにブラウザでアクセスするだけで、指定したファイルを
覗くことができます。

http://target.com/phptonuke.php?filnavn=[対象ファイル]

　ということは、次のようにしてアクセスすれば、パスワードファイルを閲覧で
きることは簡単に推測できます。

http://target.com/phptonuke.php?filnavn=/etc/passwd

　本当は「/etc/shadow」ファイルを閲覧したいですが、HTTPdの動作権限が「/e
tc/shadow」を開くことができない権限なので、仕方なくシャドウ化されたパスワ
ードファイルにあたる「/etc/shadow」にしました。これでは暗号化されたパスワ
ードのリストではないため、オフラインパスワードクラッカーでパスワード解析
できません。しかし、「/etc/passwd」ファイルであっても、ユーザー名の列挙は
可能なのです。
　ちなみに、他のユーザー・グループの列挙方法に関しては特別講座＜ユーザー
・グループ列挙編＞を参照してください。

http://akademeia.info/main/lecture2/tokubetu_user_group_list.htm

　今回うまくいったターゲットは、ドメインから海外の航空大学であることがわ
かりました。大学なので、ユーザー名がたくさんいて、しかもその中には数人の
脆弱なパスワード（ユーザー名と同じパスワード、短いパスワード、数字だけの
パスワード）を使っているユーザーがいると当たりをつけました。ということで、
オンラインパスワードクラッカーを用いて、POP3に対してJoeアカウント（ユーザ
ー名と同じパスワードを設定しているアカウントのこと）を探すように設定しま
した。数十人目でヒット。所要時間は数分。最初のGoogle Hackingのところから
計算しても、所要時間は1時間以内。後は同様な手口でどんどん探していけばよい
だけです。このアカウントはPOP3だけでなく、FTPの権限まで持っていたので、さ
らに踏み台にしていろいろできそうでした。
　上級クラッカーの方なら、こんな面倒なことをせずに一気にルート権限を奪う
かもしれませんが、ここで示したかったのは誰にでもアカウントを奪取できてし
まうということです。つまり、下級クラッカー（俗にスクリプトキディや厨房と
呼ばれる）たちであっても、脅威となりうるということです。むしろそうした層
が多いのですから、それ相応のセキュリティ対策は重要でしょう。

　なお、SQLインジェクションの存在するログインページを発見するために、Goo
gle Hackingを利用することもできます。


■0x04.) Google Hackingのためのキーワード

●バックアップディレクトリを探す

・「"Index of /backup"」

　Web管理者が臨時にファイルを保存したり、やり取りするために、非公開のディ
レクトリを作ることがあります。そのディレクトリ名として命名される可能性が
高いものに、「backup」があるわけです。運がよければ、そこに普通には手に入
ることができないファイル（ログ、個人情報など）が存在するかもしれません。

●クレジットカードナンバーを探す

・「Amex Numbers: 300000000000000..399999999999999」
・「MC Numbers: 5178000000000000..5178999999999999」
・「visa 4356000000000000..4356999999999999」

　「..」は、それを挟む数字の連番すべてが対象となります。クレジットカード
会社によって、先頭の4桁は決まっていたりするので、それを活用しています。
　例えば、アメックスカードなら「3000」〜「3999」、Master Cardなら「5178」、
Visaなら「4356」です。
　ここで手に入るようなクレジットカード番号は99%使えませんが（番号だけでは
意味がない。ネットで買い物するには名義人、有効期限も必要）、それでもこう
してセンシティブな個人情報が洩れる危険性があると覚えておいてください。

●WAREZを探す

・「"parent directory " /appz/ -xxx -html -htm -php -shtml -opendivx -md5 -md5sums」
・「"parent directory " DVDRip -xxx -html -htm -php -shtml -opendivx -md5 -md5sums」
・「"parent directory " Xvid -xxx -html -htm -php -shtml -opendivx -md5 -md5sums」
・「"parent directory " Gamez -xxx -html -htm -php -shtml -opendivx -md5 -md5sums」
・「"parent directory " MP3 -xxx -html -htm -php -shtml -opendivx -md5 -md5sums」
・「"parent directory " "[歌手の名前または音楽名]" -xxx -html -htm -php -shtml -opendivx -md5 -md5sums」

　現在日本では、ファイル共有ソフト（共有と名ばかりの実質は交換ソフトもあ
りますが）を利用したWAREZ（ゲームやアプリだけでなく、動画・映画や音楽も含
む）が主流です。しかし、世界的には昔ながらのWeb WAREZの名残がまだ残ってい
ます。そうしたものを発見するためにGoogle Hackingのテクニックを利用するこ
ともできます。普通に欲しいゲーム名などを入力しても、ノイズが多いので、ハ
イフンを付けてノイズとなるキーワードを外していきます。これが大きな特徴と
言えるでしょう。

・「inurl:microsoft filetype:iso」

　これは、「microsoft」というキーワードをURLに含み、拡張子が「ISO」のもの
を探すときに活用するパターンです。つまり、Windows OSのようなMicrosoft製の
ソフトウェアのISOファイルを探していることになります。ISOファイルを入手した
ら、ライティングソフトでCD-Rに焼いて、CDを作ることができます。
　「microsoft」のところを欲しいアプリ名やゲーム名、「iso」のところを「zip
」などに変更して流用できます。


●パスワードファイルを探す

・「inurl:passlist.txt」

　これも、「backup」ディレクトリのように、パスワードファイルとして命名さ
れやすいファイル名です。この記事を書くにあたり検索した結果、41件見つかり
ました。すでに「passlist.txt」ファイルが存在しないWebサイトが大半でした。
これは脆弱な状態で放置するWebサイトの管理人は、いつの間にかWebサイトを更
新する意欲がなくなり放置してサーバーから削除されてしまったからだと思われ
ます。しかし、キャッシュをクリックすれば、どういう状態で保存されているの
かがわかるかと思います。

・「"# -FrontPage-" inurl:service.pwd」
　これは、FrontPageのパスワードファイルである「service.pwd」ファイルを探
し出すためのパターンです。

・「"AutoCreate=TRUE password=*"」
　これは、「Website Access Analyzer」というWebサイトのアクセス解析用のCGI
（日本製のソフト）で使われているパスワードを差だし出すためのパターンです。

●その他

　他にもGoogle Hackingで使われるパターンはたくさん存在します。興味があれ
ば、次に示すURLをチェックしてみてください。

http://www.i-hacked.com/content/view/23/42/
http://johnny.ihackstuff.com/index.php?module=prodreviews
